/* CssParserTokenManager.java */
/* Generated By:JavaCC: Do not edit this line. CssParserTokenManager.java */
package org.w3c.css.parser.analyzer;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.io.UnsupportedEncodingException;
import java.util.ArrayList;
import java.util.Iterator;
import java.net.URL;
import java.math.BigDecimal;
import org.w3c.css.values.CssValue;
import org.w3c.css.values.CssOperator;
import org.w3c.css.values.CssAngle;
import org.w3c.css.values.CssCheckableValue;
import org.w3c.css.values.CssExpression;
import org.w3c.css.values.CssString;
import org.w3c.css.values.CssURL;
import org.w3c.css.values.CssLength;
import org.w3c.css.values.CssNumber;
import org.w3c.css.values.CssAttr;
import org.w3c.css.values.CssBracket;
import org.w3c.css.values.CssCalc;
import org.w3c.css.values.CssColor;
import org.w3c.css.values.CssFlexibleLength;
import org.w3c.css.values.CssFrequency;
import org.w3c.css.values.CssHashIdent;
import org.w3c.css.values.CssIdent;
import org.w3c.css.values.CssImage;
import org.w3c.css.values.CssPercentage;
import org.w3c.css.values.CssTime;
import org.w3c.css.values.CssSwitch;
import org.w3c.css.values.CssFunction;
import org.w3c.css.values.CssUnicodeRange;
import org.w3c.css.values.CssResolution;
import org.w3c.css.values.CssRatio;
import org.w3c.css.values.CssSemitone;
import org.w3c.css.values.CssTypes;
import org.w3c.css.values.CssVolume;
import org.w3c.css.properties.css.CssProperty;
import org.w3c.css.parser.Frame;
import org.w3c.css.parser.CssError;
import org.w3c.css.parser.CssErrorToken;
import org.w3c.css.parser.CssSelectors;
import org.w3c.css.parser.CssParseException;
import org.w3c.css.parser.AtRule;
import org.w3c.css.atrules.svg.AtRuleColorProfile;
import org.w3c.css.atrules.css.AtRuleCounterStyle;
import org.w3c.css.atrules.css.AtRuleFontFace;
import org.w3c.css.atrules.css.AtRuleKeyframes;
import org.w3c.css.atrules.css.AtRuleMedia;
import org.w3c.css.atrules.css.media.MediaFeature;
import org.w3c.css.atrules.css.AtRulePage;
import org.w3c.css.atrules.css.AtRulePhoneticAlphabet;
import org.w3c.css.atrules.css.AtRulePreference;
import org.w3c.css.atrules.css.AtRuleSupports;
import org.w3c.css.atrules.css.supports.SupportsFeature;
import org.w3c.css.atrules.css.AtRuleViewport;
import org.w3c.css.util.ApplContext;
import org.w3c.css.util.CssProfile;
import org.w3c.css.util.CssVersion;
import org.w3c.css.util.InvalidParamException;
import org.w3c.css.util.WarningParamException;
import org.w3c.css.util.Util;
import org.w3c.css.util.Messages;
import org.w3c.css.selectors.AdjacentSiblingSelector;
import org.w3c.css.selectors.AttributeSelector;
import org.w3c.css.selectors.ChildSelector;
import org.w3c.css.selectors.ClassSelector;
import org.w3c.css.selectors.DescendantSelector;
import org.w3c.css.selectors.GeneralSiblingSelector;
import org.w3c.css.selectors.IdSelector;
import org.w3c.css.selectors.TypeSelector;
import org.w3c.css.selectors.UniversalSelector;
import org.w3c.css.selectors.attributes.AttributeAny;
import org.w3c.css.selectors.attributes.AttributeBegin;
import org.w3c.css.selectors.attributes.AttributeExact;
import org.w3c.css.selectors.attributes.AttributeOneOf;
import org.w3c.css.selectors.attributes.AttributeStart;
import org.w3c.css.selectors.attributes.AttributeSubstr;
import org.w3c.css.selectors.attributes.AttributeSuffix;

/** Token Manager. */
public class CssParserTokenManager implements CssParserConstants {

  /** Debug output. */
  public  java.io.PrintStream debugStream = System.out;
  /** Set debug output. */
  public  void setDebugStream(java.io.PrintStream ds) { debugStream = ds; }
private int jjStopAtPos(int pos, int kind)
{
   jjmatchedKind = kind;
   jjmatchedPos = pos;
   return pos + 1;
}
private int jjMoveStringLiteralDfa0_0(){
   switch(curChar)
   {
      case 36:
         return jjMoveStringLiteralDfa1_0(0x200000000000L, 0x0L);
      case 37:
         jjmatchedKind = 115;
         return jjMoveNfa_0(7, 0);
      case 40:
         jjmatchedKind = 55;
         return jjMoveNfa_0(7, 0);
      case 41:
         jjmatchedKind = 54;
         return jjMoveNfa_0(7, 0);
      case 42:
         jjmatchedKind = 52;
         return jjMoveStringLiteralDfa1_0(0x400000000000L, 0x0L);
      case 45:
         jjmatchedKind = 28;
         return jjMoveStringLiteralDfa1_0(0x800000L, 0x0L);
      case 46:
         jjmatchedKind = 53;
         return jjMoveNfa_0(7, 0);
      case 47:
         jjmatchedKind = 49;
         return jjMoveNfa_0(7, 0);
      case 58:
         jjmatchedKind = 56;
         return jjMoveStringLiteralDfa1_0(0x0L, 0x40000000400L);
      case 59:
         jjmatchedKind = 48;
         return jjMoveNfa_0(7, 0);
      case 60:
         return jjMoveStringLiteralDfa1_0(0x400000L, 0x0L);
      case 61:
         jjmatchedKind = 47;
         return jjMoveNfa_0(7, 0);
      case 64:
         return jjMoveStringLiteralDfa1_0(0x0L, 0x1ffff800L);
      case 91:
         jjmatchedKind = 50;
         return jjMoveNfa_0(7, 0);
      case 93:
         jjmatchedKind = 51;
         return jjMoveNfa_0(7, 0);
      case 94:
         return jjMoveStringLiteralDfa1_0(0x100000000000L, 0x0L);
      case 65:
      case 97:
         return jjMoveStringLiteralDfa1_0(0x100000000L, 0x100000000000L);
      case 76:
      case 108:
         return jjMoveStringLiteralDfa1_0(0x0L, 0x20000000000L);
      case 78:
      case 110:
         return jjMoveStringLiteralDfa1_0(0x800000000L, 0x0L);
      case 79:
      case 111:
         return jjMoveStringLiteralDfa1_0(0x600000000L, 0x0L);
      case 86:
      case 118:
         return jjMoveStringLiteralDfa1_0(0x0L, 0x200000000000L);
      case 124:
         jjmatchedKind = 114;
         return jjMoveStringLiteralDfa1_0(0x2000000L, 0x0L);
      case 125:
         jjmatchedKind = 43;
         return jjMoveNfa_0(7, 0);
      default :
         return jjMoveNfa_0(7, 0);
   }
}
private int jjMoveStringLiteralDfa1_0(long active0, long active1){
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
   return jjMoveNfa_0(7, 0);
   }
   switch(curChar)
   {
      case 33:
         return jjMoveStringLiteralDfa2_0(active0, 0x400000L, active1, 0L);
      case 45:
         return jjMoveStringLiteralDfa2_0(active0, 0x800000L, active1, 0L);
      case 58:
         if ((active1 & 0x400L) != 0L)
         {
            jjmatchedKind = 74;
            jjmatchedPos = 1;
         }
         break;
      case 61:
         if ((active0 & 0x2000000L) != 0L)
         {
            jjmatchedKind = 25;
            jjmatchedPos = 1;
         }
         else if ((active0 & 0x100000000000L) != 0L)
         {
            jjmatchedKind = 44;
            jjmatchedPos = 1;
         }
         else if ((active0 & 0x200000000000L) != 0L)
         {
            jjmatchedKind = 45;
            jjmatchedPos = 1;
         }
         else if ((active0 & 0x400000000000L) != 0L)
         {
            jjmatchedKind = 46;
            jjmatchedPos = 1;
         }
         break;
      case 65:
      case 97:
         return jjMoveStringLiteralDfa2_0(active0, 0L, active1, 0x220000000000L);
      case 66:
      case 98:
         return jjMoveStringLiteralDfa2_0(active0, 0L, active1, 0x400000L);
      case 67:
      case 99:
         return jjMoveStringLiteralDfa2_0(active0, 0L, active1, 0x3080800L);
      case 70:
      case 102:
         return jjMoveStringLiteralDfa2_0(active0, 0L, active1, 0x10000L);
      case 73:
      case 105:
         return jjMoveStringLiteralDfa2_0(active0, 0L, active1, 0x1000L);
      case 75:
      case 107:
         return jjMoveStringLiteralDfa2_0(active0, 0L, active1, 0x20000L);
      case 76:
      case 108:
         return jjMoveStringLiteralDfa2_0(active0, 0L, active1, 0x800000L);
      case 77:
      case 109:
         return jjMoveStringLiteralDfa2_0(active0, 0L, active1, 0x4000L);
      case 78:
      case 110:
         return jjMoveStringLiteralDfa2_0(active0, 0x500000000L, active1, 0x40000002000L);
      case 79:
      case 111:
         return jjMoveStringLiteralDfa2_0(active0, 0x800000000L, active1, 0L);
      case 80:
      case 112:
         return jjMoveStringLiteralDfa2_0(active0, 0L, active1, 0x4048000L);
      case 82:
      case 114:
         if ((active0 & 0x200000000L) != 0L)
         {
            jjmatchedKind = 33;
            jjmatchedPos = 1;
         }
         return jjMoveStringLiteralDfa2_0(active0, 0L, active1, 0x200000L);
      case 83:
      case 115:
         return jjMoveStringLiteralDfa2_0(active0, 0L, active1, 0x8000000L);
      case 84:
      case 116:
         return jjMoveStringLiteralDfa2_0(active0, 0L, active1, 0x100000100000L);
      case 86:
      case 118:
         return jjMoveStringLiteralDfa2_0(active0, 0L, active1, 0x10000000L);
      default :
         break;
   }
   return jjMoveNfa_0(7, 1);
}
private int jjMoveStringLiteralDfa2_0(long old0, long active0, long old1, long active1){
   if (((active0 &= old0) | (active1 &= old1)) == 0L)
      return jjMoveNfa_0(7, 1);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
   return jjMoveNfa_0(7, 1);
   }
   switch(curChar)
   {
      case 45:
         return jjMoveStringLiteralDfa3_0(active0, 0x400000L, active1, 0L);
      case 62:
         if ((active0 & 0x800000L) != 0L)
         {
            jjmatchedKind = 23;
            jjmatchedPos = 2;
         }
         break;
      case 65:
      case 97:
         return jjMoveStringLiteralDfa3_0(active0, 0L, active1, 0xa000L);
      case 68:
      case 100:
         if ((active0 & 0x100000000L) != 0L)
         {
            jjmatchedKind = 32;
            jjmatchedPos = 2;
         }
         break;
      case 69:
      case 101:
         return jjMoveStringLiteralDfa3_0(active0, 0L, active1, 0x824000L);
      case 72:
      case 104:
         return jjMoveStringLiteralDfa3_0(active0, 0L, active1, 0x4000800L);
      case 73:
      case 105:
         return jjMoveStringLiteralDfa3_0(active0, 0L, active1, 0x10200000L);
      case 76:
      case 108:
         return jjMoveStringLiteralDfa3_0(active0, 0x400000000L, active1, 0L);
      case 77:
      case 109:
         return jjMoveStringLiteralDfa3_0(active0, 0L, active1, 0x1000L);
      case 78:
      case 110:
         return jjMoveStringLiteralDfa3_0(active0, 0L, active1, 0x20000000000L);
      case 79:
      case 111:
         return jjMoveStringLiteralDfa3_0(active0, 0L, active1, 0x40003590000L);
      case 82:
      case 114:
         return jjMoveStringLiteralDfa3_0(active0, 0L, active1, 0x200000040000L);
      case 84:
      case 116:
         if ((active0 & 0x800000000L) != 0L)
         {
            jjmatchedKind = 35;
            jjmatchedPos = 2;
         }
         return jjMoveStringLiteralDfa3_0(active0, 0L, active1, 0x100000000000L);
      case 85:
      case 117:
         return jjMoveStringLiteralDfa3_0(active0, 0L, active1, 0x8000000L);
      default :
         break;
   }
   return jjMoveNfa_0(7, 2);
}
private int jjMoveStringLiteralDfa3_0(long old0, long active0, long old1, long active1){
   if (((active0 &= old0) | (active1 &= old1)) == 0L)
      return jjMoveNfa_0(7, 2);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
   return jjMoveNfa_0(7, 2);
   }
   switch(curChar)
   {
      case 40:
         if ((active1 & 0x200000000000L) != 0L)
         {
            jjmatchedKind = 109;
            jjmatchedPos = 3;
         }
         break;
      case 45:
         if ((active0 & 0x400000L) != 0L)
         {
            jjmatchedKind = 22;
            jjmatchedPos = 3;
         }
         break;
      case 65:
      case 97:
         return jjMoveStringLiteralDfa4_0(active0, 0L, active1, 0x800L);
      case 68:
      case 100:
         return jjMoveStringLiteralDfa4_0(active0, 0L, active1, 0x4000L);
      case 69:
      case 101:
         return jjMoveStringLiteralDfa4_0(active0, 0L, active1, 0x10040000L);
      case 70:
      case 102:
         return jjMoveStringLiteralDfa4_0(active0, 0L, active1, 0x800000L);
      case 71:
      case 103:
         return jjMoveStringLiteralDfa4_0(active0, 0L, active1, 0x20000208000L);
      case 76:
      case 108:
         return jjMoveStringLiteralDfa4_0(active0, 0L, active1, 0x80000L);
      case 77:
      case 109:
         return jjMoveStringLiteralDfa4_0(active0, 0L, active1, 0x2000L);
      case 78:
      case 110:
         return jjMoveStringLiteralDfa4_0(active0, 0L, active1, 0x10000L);
      case 79:
      case 111:
         return jjMoveStringLiteralDfa4_0(active0, 0L, active1, 0x4000000L);
      case 80:
      case 112:
         if ((active1 & 0x100000L) != 0L)
         {
            jjmatchedKind = 84;
            jjmatchedPos = 3;
         }
         return jjMoveStringLiteralDfa4_0(active0, 0L, active1, 0x8001000L);
      case 82:
      case 114:
         return jjMoveStringLiteralDfa4_0(active0, 0L, active1, 0x100000000000L);
      case 84:
      case 116:
         return jjMoveStringLiteralDfa4_0(active0, 0L, active1, 0x40000400000L);
      case 85:
      case 117:
         return jjMoveStringLiteralDfa4_0(active0, 0L, active1, 0x3000000L);
      case 89:
      case 121:
         if ((active0 & 0x400000000L) != 0L)
         {
            jjmatchedKind = 34;
            jjmatchedPos = 3;
         }
         return jjMoveStringLiteralDfa4_0(active0, 0L, active1, 0x20000L);
      default :
         break;
   }
   return jjMoveNfa_0(7, 3);
}
private int jjMoveStringLiteralDfa4_0(long old0, long active0, long old1, long active1){
   if (((active0 &= old0) | (active1 &= old1)) == 0L)
      return jjMoveNfa_0(7, 3);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
   return jjMoveNfa_0(7, 3);
   }
   switch(curChar)
   {
      case 40:
         if ((active1 & 0x20000000000L) != 0L)
         {
            jjmatchedKind = 105;
            jjmatchedPos = 4;
         }
         else if ((active1 & 0x40000000000L) != 0L)
         {
            jjmatchedKind = 106;
            jjmatchedPos = 4;
         }
         else if ((active1 & 0x100000000000L) != 0L)
         {
            jjmatchedKind = 108;
            jjmatchedPos = 4;
         }
         break;
      case 69:
      case 101:
         if ((active1 & 0x8000L) != 0L)
         {
            jjmatchedKind = 79;
            jjmatchedPos = 4;
         }
         return jjMoveStringLiteralDfa5_0(active1, 0x2000L);
      case 70:
      case 102:
         return jjMoveStringLiteralDfa5_0(active1, 0x60000L);
      case 72:
      case 104:
         return jjMoveStringLiteralDfa5_0(active1, 0x200000L);
      case 73:
      case 105:
         return jjMoveStringLiteralDfa5_0(active1, 0x4000L);
      case 78:
      case 110:
         return jjMoveStringLiteralDfa5_0(active1, 0x7000000L);
      case 79:
      case 111:
         return jjMoveStringLiteralDfa5_0(active1, 0x81000L);
      case 80:
      case 112:
         return jjMoveStringLiteralDfa5_0(active1, 0x8000000L);
      case 82:
      case 114:
         return jjMoveStringLiteralDfa5_0(active1, 0x800L);
      case 84:
      case 116:
         if ((active1 & 0x800000L) != 0L)
         {
            jjmatchedKind = 87;
            jjmatchedPos = 4;
         }
         return jjMoveStringLiteralDfa5_0(active1, 0x410000L);
      case 87:
      case 119:
         return jjMoveStringLiteralDfa5_0(active1, 0x10000000L);
      default :
         break;
   }
   return jjMoveNfa_0(7, 4);
}
private int jjMoveStringLiteralDfa5_0(long old1, long active1){
   if (((active1 &= old1)) == 0L)
      return jjMoveNfa_0(7, 4);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
   return jjMoveNfa_0(7, 4);
   }
   switch(curChar)
   {
      case 45:
         return jjMoveStringLiteralDfa6_0(active1, 0x10000L);
      case 65:
      case 97:
         if ((active1 & 0x4000L) != 0L)
         {
            jjmatchedKind = 78;
            jjmatchedPos = 5;
         }
         break;
      case 69:
      case 101:
         return jjMoveStringLiteralDfa6_0(active1, 0x4040000L);
      case 79:
      case 111:
         return jjMoveStringLiteralDfa6_0(active1, 0x8400000L);
      case 80:
      case 112:
         return jjMoveStringLiteralDfa6_0(active1, 0x10000000L);
      case 82:
      case 114:
         return jjMoveStringLiteralDfa6_0(active1, 0xa1000L);
      case 83:
      case 115:
         return jjMoveStringLiteralDfa6_0(active1, 0x2800L);
      case 84:
      case 116:
         if ((active1 & 0x200000L) != 0L)
         {
            jjmatchedKind = 85;
            jjmatchedPos = 5;
         }
         return jjMoveStringLiteralDfa6_0(active1, 0x3000000L);
      default :
         break;
   }
   return jjMoveNfa_0(7, 5);
}
private int jjMoveStringLiteralDfa6_0(long old1, long active1){
   if (((active1 &= old1)) == 0L)
      return jjMoveNfa_0(7, 5);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
   return jjMoveNfa_0(7, 5);
   }
   switch(curChar)
   {
      case 45:
         return jjMoveStringLiteralDfa7_0(active1, 0x80000L);
      case 65:
      case 97:
         return jjMoveStringLiteralDfa7_0(active1, 0x20000L);
      case 69:
      case 101:
         return jjMoveStringLiteralDfa7_0(active1, 0x3000800L);
      case 70:
      case 102:
         return jjMoveStringLiteralDfa7_0(active1, 0x10000L);
      case 77:
      case 109:
         if ((active1 & 0x400000L) != 0L)
         {
            jjmatchedKind = 86;
            jjmatchedPos = 6;
         }
         break;
      case 79:
      case 111:
         return jjMoveStringLiteralDfa7_0(active1, 0x10000000L);
      case 80:
      case 112:
         return jjMoveStringLiteralDfa7_0(active1, 0x2000L);
      case 82:
      case 114:
         return jjMoveStringLiteralDfa7_0(active1, 0x8040000L);
      case 84:
      case 116:
         if ((active1 & 0x1000L) != 0L)
         {
            jjmatchedKind = 76;
            jjmatchedPos = 6;
         }
         return jjMoveStringLiteralDfa7_0(active1, 0x4000000L);
      default :
         break;
   }
   return jjMoveNfa_0(7, 6);
}
private int jjMoveStringLiteralDfa7_0(long old1, long active1){
   if (((active1 &= old1)) == 0L)
      return jjMoveNfa_0(7, 6);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
   return jjMoveNfa_0(7, 6);
   }
   switch(curChar)
   {
      case 65:
      case 97:
         return jjMoveStringLiteralDfa8_0(active1, 0x12000L);
      case 69:
      case 101:
         return jjMoveStringLiteralDfa8_0(active1, 0x40000L);
      case 73:
      case 105:
         return jjMoveStringLiteralDfa8_0(active1, 0x4000000L);
      case 77:
      case 109:
         return jjMoveStringLiteralDfa8_0(active1, 0x20000L);
      case 80:
      case 112:
         return jjMoveStringLiteralDfa8_0(active1, 0x80000L);
      case 82:
      case 114:
         if ((active1 & 0x1000000L) != 0L)
         {
            jjmatchedKind = 88;
            jjmatchedPos = 7;
         }
         return jjMoveStringLiteralDfa8_0(active1, 0x12000000L);
      case 84:
      case 116:
         if ((active1 & 0x800L) != 0L)
         {
            jjmatchedKind = 75;
            jjmatchedPos = 7;
         }
         return jjMoveStringLiteralDfa8_0(active1, 0x8000000L);
      default :
         break;
   }
   return jjMoveNfa_0(7, 7);
}
private int jjMoveStringLiteralDfa8_0(long old1, long active1){
   if (((active1 &= old1)) == 0L)
      return jjMoveNfa_0(7, 7);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
   return jjMoveNfa_0(7, 7);
   }
   switch(curChar)
   {
      case 45:
         return jjMoveStringLiteralDfa9_0(active1, 0x2000000L);
      case 67:
      case 99:
         return jjMoveStringLiteralDfa9_0(active1, 0x4012000L);
      case 69:
      case 101:
         return jjMoveStringLiteralDfa9_0(active1, 0x20000L);
      case 78:
      case 110:
         return jjMoveStringLiteralDfa9_0(active1, 0x40000L);
      case 82:
      case 114:
         return jjMoveStringLiteralDfa9_0(active1, 0x80000L);
      case 83:
      case 115:
         if ((active1 & 0x8000000L) != 0L)
         {
            jjmatchedKind = 91;
            jjmatchedPos = 8;
         }
         break;
      case 84:
      case 116:
         if ((active1 & 0x10000000L) != 0L)
         {
            jjmatchedKind = 92;
            jjmatchedPos = 8;
         }
         break;
      default :
         break;
   }
   return jjMoveNfa_0(7, 8);
}
private int jjMoveStringLiteralDfa9_0(long old1, long active1){
   if (((active1 &= old1)) == 0L)
      return jjMoveNfa_0(7, 8);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
   return jjMoveNfa_0(7, 8);
   }
   switch(curChar)
   {
      case 45:
         return jjMoveStringLiteralDfa10_0(active1, 0x4000000L);
      case 67:
      case 99:
         return jjMoveStringLiteralDfa10_0(active1, 0x40000L);
      case 69:
      case 101:
         if ((active1 & 0x2000L) != 0L)
         {
            jjmatchedKind = 77;
            jjmatchedPos = 9;
         }
         else if ((active1 & 0x10000L) != 0L)
         {
            jjmatchedKind = 80;
            jjmatchedPos = 9;
         }
         break;
      case 79:
      case 111:
         return jjMoveStringLiteralDfa10_0(active1, 0x80000L);
      case 83:
      case 115:
         if ((active1 & 0x20000L) != 0L)
         {
            jjmatchedKind = 81;
            jjmatchedPos = 9;
         }
         return jjMoveStringLiteralDfa10_0(active1, 0x2000000L);
      default :
         break;
   }
   return jjMoveNfa_0(7, 9);
}
private int jjMoveStringLiteralDfa10_0(long old1, long active1){
   if (((active1 &= old1)) == 0L)
      return jjMoveNfa_0(7, 9);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
   return jjMoveNfa_0(7, 9);
   }
   switch(curChar)
   {
      case 65:
      case 97:
         return jjMoveStringLiteralDfa11_0(active1, 0x4000000L);
      case 69:
      case 101:
         if ((active1 & 0x40000L) != 0L)
         {
            jjmatchedKind = 82;
            jjmatchedPos = 10;
         }
         break;
      case 70:
      case 102:
         return jjMoveStringLiteralDfa11_0(active1, 0x80000L);
      case 84:
      case 116:
         return jjMoveStringLiteralDfa11_0(active1, 0x2000000L);
      default :
         break;
   }
   return jjMoveNfa_0(7, 10);
}
private int jjMoveStringLiteralDfa11_0(long old1, long active1){
   if (((active1 &= old1)) == 0L)
      return jjMoveNfa_0(7, 10);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
   return jjMoveNfa_0(7, 10);
   }
   switch(curChar)
   {
      case 73:
      case 105:
         return jjMoveStringLiteralDfa12_0(active1, 0x80000L);
      case 76:
      case 108:
         return jjMoveStringLiteralDfa12_0(active1, 0x4000000L);
      case 89:
      case 121:
         return jjMoveStringLiteralDfa12_0(active1, 0x2000000L);
      default :
         break;
   }
   return jjMoveNfa_0(7, 11);
}
private int jjMoveStringLiteralDfa12_0(long old1, long active1){
   if (((active1 &= old1)) == 0L)
      return jjMoveNfa_0(7, 11);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
   return jjMoveNfa_0(7, 11);
   }
   switch(curChar)
   {
      case 76:
      case 108:
         return jjMoveStringLiteralDfa13_0(active1, 0x2080000L);
      case 80:
      case 112:
         return jjMoveStringLiteralDfa13_0(active1, 0x4000000L);
      default :
         break;
   }
   return jjMoveNfa_0(7, 12);
}
private int jjMoveStringLiteralDfa13_0(long old1, long active1){
   if (((active1 &= old1)) == 0L)
      return jjMoveNfa_0(7, 12);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
   return jjMoveNfa_0(7, 12);
   }
   switch(curChar)
   {
      case 69:
      case 101:
         if ((active1 & 0x80000L) != 0L)
         {
            jjmatchedKind = 83;
            jjmatchedPos = 13;
         }
         else if ((active1 & 0x2000000L) != 0L)
         {
            jjmatchedKind = 89;
            jjmatchedPos = 13;
         }
         break;
      case 72:
      case 104:
         return jjMoveStringLiteralDfa14_0(active1, 0x4000000L);
      default :
         break;
   }
   return jjMoveNfa_0(7, 13);
}
private int jjMoveStringLiteralDfa14_0(long old1, long active1){
   if (((active1 &= old1)) == 0L)
      return jjMoveNfa_0(7, 13);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
   return jjMoveNfa_0(7, 13);
   }
   switch(curChar)
   {
      case 65:
      case 97:
         return jjMoveStringLiteralDfa15_0(active1, 0x4000000L);
      default :
         break;
   }
   return jjMoveNfa_0(7, 14);
}
private int jjMoveStringLiteralDfa15_0(long old1, long active1){
   if (((active1 &= old1)) == 0L)
      return jjMoveNfa_0(7, 14);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
   return jjMoveNfa_0(7, 14);
   }
   switch(curChar)
   {
      case 66:
      case 98:
         return jjMoveStringLiteralDfa16_0(active1, 0x4000000L);
      default :
         break;
   }
   return jjMoveNfa_0(7, 15);
}
private int jjMoveStringLiteralDfa16_0(long old1, long active1){
   if (((active1 &= old1)) == 0L)
      return jjMoveNfa_0(7, 15);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
   return jjMoveNfa_0(7, 15);
   }
   switch(curChar)
   {
      case 69:
      case 101:
         return jjMoveStringLiteralDfa17_0(active1, 0x4000000L);
      default :
         break;
   }
   return jjMoveNfa_0(7, 16);
}
private int jjMoveStringLiteralDfa17_0(long old1, long active1){
   if (((active1 &= old1)) == 0L)
      return jjMoveNfa_0(7, 16);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
   return jjMoveNfa_0(7, 16);
   }
   switch(curChar)
   {
      case 84:
      case 116:
         if ((active1 & 0x4000000L) != 0L)
         {
            jjmatchedKind = 90;
            jjmatchedPos = 17;
         }
         break;
      default :
         break;
   }
   return jjMoveNfa_0(7, 17);
}
static final long[] jjbitVec0 = {
   0xfffffffffffffffeL, 0xffffffffffffffffL, 0xffffffffffffffffL, 0xffffffffffffffffL
};
static final long[] jjbitVec2 = {
   0x0L, 0x0L, 0xffffffffffffffffL, 0xffffffffffffffffL
};
private int jjMoveNfa_0(int startState, int curPos)
{
   int strKind = jjmatchedKind;
   int strPos = jjmatchedPos;
   int seenUpto;
   input_stream.backup(seenUpto = curPos + 1);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) { throw new Error("Internal Error"); }
   curPos = 0;
   int startsAt = 0;
   jjnewStateCnt = 893;
   int i = 1;
   jjstateSet[0] = startState;
   int kind = 0x7fffffff;
   for (;;)
   {
      if (++jjround == 0x7fffffff)
         ReInitRounds();
      if (curChar < 64)
      {
         long l = 1L << curChar;
         do
         {
            switch(jjstateSet[--i])
            {
               case 7:
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 71)
                        kind = 71;
                     { jjCheckNAddStates(0, 110); }
                  }
                  else if ((0x9000807200000000L & l) != 0L)
                  {
                     if (kind > 113)
                        kind = 113;
                  }
                  else if ((0x100003600L & l) != 0L)
                  {
                     if (kind > 21)
                        kind = 21;
                     { jjCheckNAddStates(111, 130); }
                  }
                  else if (curChar == 46)
                     { jjCheckNAddStates(131, 159); }
                  else if (curChar == 35)
                     { jjCheckNAddStates(160, 164); }
                  else if (curChar == 45)
                     { jjAddStates(165, 169); }
                  else if (curChar == 39)
                  {
                     if (kind > 37)
                        kind = 37;
                     { jjCheckNAddStates(170, 174); }
                  }
                  else if (curChar == 34)
                  {
                     if (kind > 37)
                        kind = 37;
                     { jjCheckNAddStates(175, 179); }
                  }
                  else if (curChar == 44)
                  {
                     if (kind > 30)
                        kind = 30;
                  }
                  else if (curChar == 62)
                  {
                     if (kind > 29)
                        kind = 29;
                  }
                  else if (curChar == 43)
                  {
                     if (kind > 27)
                        kind = 27;
                  }
                  if (curChar == 33)
                     { jjCheckNAddStates(180, 183); }
                  else if (curChar == 45)
                     { jjAddStates(184, 185); }
                  else if (curChar == 60)
                     jjstateSet[jjnewStateCnt++] = 213;
                  else if (curChar == 47)
                     jjstateSet[jjnewStateCnt++] = 0;
                  if (curChar == 60)
                     { jjCheckNAddStates(186, 190); }
                  break;
               case 0:
                  if (curChar == 42)
                     { jjCheckNAddTwoStates(1, 2); }
                  break;
               case 1:
                  if ((0xfffffbffffffffffL & l) != 0L)
                     { jjCheckNAddTwoStates(1, 2); }
                  break;
               case 2:
                  if (curChar == 42)
                     { jjCheckNAddStates(191, 193); }
                  break;
               case 3:
                  if ((0xffff7bffffffffffL & l) != 0L)
                     { jjCheckNAddTwoStates(4, 5); }
                  break;
               case 4:
                  if ((0xfffffbffffffffffL & l) != 0L)
                     { jjCheckNAddTwoStates(4, 5); }
                  break;
               case 5:
                  if (curChar == 42)
                     { jjCheckNAddStates(194, 196); }
                  break;
               case 6:
                  if (curChar == 47 && kind > 1)
                     kind = 1;
                  break;
               case 9:
                  if (curChar == 43 && kind > 27)
                     kind = 27;
                  break;
               case 10:
                  if (curChar == 62 && kind > 29)
                     kind = 29;
                  break;
               case 11:
                  if (curChar == 44 && kind > 30)
                     kind = 30;
                  break;
               case 12:
                  if (curChar == 46)
                     jjstateSet[jjnewStateCnt++] = 13;
                  break;
               case 14:
                  if ((0xfffffdffffffffffL & l) != 0L)
                     { jjAddStates(197, 198); }
                  break;
               case 15:
                  if (curChar == 41 && kind > 41)
                     kind = 41;
                  break;
               case 25:
                  if (curChar == 46)
                     jjstateSet[jjnewStateCnt++] = 24;
                  break;
               case 42:
                  if (curChar == 58)
                     jjstateSet[jjnewStateCnt++] = 41;
                  break;
               case 50:
                  if (curChar == 45)
                     { jjAddStates(199, 200); }
                  break;
               case 52:
                  if ((0x3ff200000000000L & l) == 0L)
                     break;
                  if (kind > 93)
                     kind = 93;
                  { jjCheckNAddTwoStates(52, 53); }
                  break;
               case 54:
                  if ((0xfc00ffffffffcbffL & l) == 0L)
                     break;
                  if (kind > 93)
                     kind = 93;
                  { jjCheckNAddTwoStates(52, 53); }
                  break;
               case 55:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 93)
                     kind = 93;
                  { jjCheckNAddStates(201, 205); }
                  break;
               case 56:
                  if (curChar != 10)
                     break;
                  if (kind > 93)
                     kind = 93;
                  { jjCheckNAddTwoStates(52, 53); }
                  break;
               case 57:
               case 66:
                  if (curChar == 13)
                     { jjCheckNAdd(56); }
                  break;
               case 58:
                  if ((0x100003600L & l) == 0L)
                     break;
                  if (kind > 93)
                     kind = 93;
                  { jjCheckNAddTwoStates(52, 53); }
                  break;
               case 59:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 93)
                     kind = 93;
                  { jjCheckNAddStates(206, 213); }
                  break;
               case 60:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 93)
                     kind = 93;
                  { jjCheckNAddStates(214, 217); }
                  break;
               case 61:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 93)
                     kind = 93;
                  { jjCheckNAddStates(218, 222); }
                  break;
               case 62:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 93)
                     kind = 93;
                  { jjCheckNAddStates(223, 228); }
                  break;
               case 63:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 93)
                     kind = 93;
                  { jjCheckNAddStates(229, 235); }
                  break;
               case 65:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 93)
                     kind = 93;
                  { jjCheckNAddStates(236, 240); }
                  break;
               case 67:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 93)
                     kind = 93;
                  { jjCheckNAddStates(241, 248); }
                  break;
               case 68:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 93)
                     kind = 93;
                  { jjCheckNAddStates(249, 252); }
                  break;
               case 69:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 93)
                     kind = 93;
                  { jjCheckNAddStates(253, 257); }
                  break;
               case 70:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 93)
                     kind = 93;
                  { jjCheckNAddStates(258, 263); }
                  break;
               case 71:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 93)
                     kind = 93;
                  { jjCheckNAddStates(264, 270); }
                  break;
               case 72:
                  if (curChar == 40 && kind > 107)
                     kind = 107;
                  break;
               case 77:
                  if (curChar == 60)
                     { jjCheckNAddStates(186, 190); }
                  break;
               case 79:
                  if ((0x100003600L & l) != 0L)
                     { jjCheckNAddStates(271, 275); }
                  break;
               case 80:
                  if (curChar == 42)
                     { jjCheckNAddTwoStates(81, 82); }
                  break;
               case 81:
                  if ((0xfffffbffffffffffL & l) != 0L)
                     { jjCheckNAddTwoStates(81, 82); }
                  break;
               case 82:
                  if (curChar == 42)
                     { jjCheckNAddStates(276, 278); }
                  break;
               case 83:
                  if ((0xffff7bffffffffffL & l) != 0L)
                     { jjCheckNAddTwoStates(84, 85); }
                  break;
               case 84:
                  if ((0xfffffbffffffffffL & l) != 0L)
                     { jjCheckNAddTwoStates(84, 85); }
                  break;
               case 85:
                  if (curChar == 42)
                     { jjCheckNAddStates(279, 281); }
                  break;
               case 86:
                  if (curChar == 47)
                     { jjCheckNAddStates(271, 275); }
                  break;
               case 87:
                  if (curChar == 47)
                     jjstateSet[jjnewStateCnt++] = 80;
                  break;
               case 88:
                  if (curChar == 45)
                     { jjCheckNAddTwoStates(89, 198); }
                  break;
               case 90:
                  if ((0x3ff200000000000L & l) != 0L)
                     { jjCheckNAddStates(282, 287); }
                  break;
               case 91:
                  if ((0x100003600L & l) != 0L)
                     { jjCheckNAddStates(288, 293); }
                  break;
               case 92:
                  if (curChar == 42)
                     { jjCheckNAddTwoStates(93, 94); }
                  break;
               case 93:
                  if ((0xfffffbffffffffffL & l) != 0L)
                     { jjCheckNAddTwoStates(93, 94); }
                  break;
               case 94:
                  if (curChar == 42)
                     { jjCheckNAddStates(294, 296); }
                  break;
               case 95:
                  if ((0xffff7bffffffffffL & l) != 0L)
                     { jjCheckNAddTwoStates(96, 97); }
                  break;
               case 96:
                  if ((0xfffffbffffffffffL & l) != 0L)
                     { jjCheckNAddTwoStates(96, 97); }
                  break;
               case 97:
                  if (curChar == 42)
                     { jjCheckNAddStates(297, 299); }
                  break;
               case 98:
                  if (curChar == 47)
                     { jjCheckNAddStates(288, 293); }
                  break;
               case 99:
                  if (curChar == 47)
                     jjstateSet[jjnewStateCnt++] = 92;
                  break;
               case 100:
                  if (curChar == 45)
                     { jjCheckNAddTwoStates(101, 117); }
                  break;
               case 102:
                  if ((0x3ff200000000000L & l) != 0L)
                     { jjCheckNAddStates(300, 302); }
                  break;
               case 103:
                  if (curChar == 61)
                     { jjCheckNAddStates(303, 307); }
                  break;
               case 104:
                  if (curChar == 45)
                     { jjCheckNAddTwoStates(105, 147); }
                  break;
               case 106:
                  if ((0x3ff200000000000L & l) != 0L)
                     { jjCheckNAddStates(308, 313); }
                  break;
               case 107:
                  if ((0x100003600L & l) != 0L)
                     { jjCheckNAddStates(314, 319); }
                  break;
               case 108:
                  if (curChar == 42)
                     { jjCheckNAddTwoStates(109, 110); }
                  break;
               case 109:
                  if ((0xfffffbffffffffffL & l) != 0L)
                     { jjCheckNAddTwoStates(109, 110); }
                  break;
               case 110:
                  if (curChar == 42)
                     { jjCheckNAddStates(320, 322); }
                  break;
               case 111:
                  if ((0xffff7bffffffffffL & l) != 0L)
                     { jjCheckNAddTwoStates(112, 113); }
                  break;
               case 112:
                  if ((0xfffffbffffffffffL & l) != 0L)
                     { jjCheckNAddTwoStates(112, 113); }
                  break;
               case 113:
                  if (curChar == 42)
                     { jjCheckNAddStates(323, 325); }
                  break;
               case 114:
                  if (curChar == 47)
                     { jjCheckNAddStates(314, 319); }
                  break;
               case 115:
                  if (curChar == 47)
                     jjstateSet[jjnewStateCnt++] = 108;
                  break;
               case 116:
                  if (curChar == 62 && kind > 111)
                     kind = 111;
                  break;
               case 118:
                  if ((0xfc00ffffffffcbffL & l) != 0L)
                     { jjCheckNAddStates(300, 302); }
                  break;
               case 120:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(326, 331); }
                  break;
               case 121:
                  if (curChar == 10)
                     { jjCheckNAddStates(300, 302); }
                  break;
               case 122:
               case 130:
                  if (curChar == 13)
                     { jjCheckNAdd(121); }
                  break;
               case 123:
                  if ((0x100003600L & l) != 0L)
                     { jjCheckNAddStates(300, 302); }
                  break;
               case 124:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(332, 340); }
                  break;
               case 125:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(341, 345); }
                  break;
               case 126:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(346, 351); }
                  break;
               case 127:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(352, 358); }
                  break;
               case 128:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(359, 366); }
                  break;
               case 129:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(367, 372); }
                  break;
               case 131:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(373, 381); }
                  break;
               case 132:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(382, 386); }
                  break;
               case 133:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(387, 392); }
                  break;
               case 134:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(393, 399); }
                  break;
               case 135:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(400, 407); }
                  break;
               case 137:
                  if ((0xfc00ffffffffcbffL & l) != 0L)
                     { jjCheckNAddStates(308, 313); }
                  break;
               case 138:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(408, 415); }
                  break;
               case 139:
                  if (curChar == 10)
                     { jjCheckNAddStates(308, 313); }
                  break;
               case 140:
               case 149:
                  if (curChar == 13)
                     { jjCheckNAdd(139); }
                  break;
               case 141:
                  if ((0x100003600L & l) != 0L)
                     { jjCheckNAddStates(416, 424); }
                  break;
               case 142:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(425, 435); }
                  break;
               case 143:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(436, 442); }
                  break;
               case 144:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(443, 450); }
                  break;
               case 145:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(451, 459); }
                  break;
               case 146:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(460, 469); }
                  break;
               case 148:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(470, 477); }
                  break;
               case 150:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(478, 488); }
                  break;
               case 151:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(489, 495); }
                  break;
               case 152:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(496, 503); }
                  break;
               case 153:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(504, 512); }
                  break;
               case 154:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(513, 522); }
                  break;
               case 155:
                  if (curChar == 34)
                     { jjCheckNAddStates(523, 525); }
                  break;
               case 156:
                  if ((0xfffffffbffffcbffL & l) != 0L)
                     { jjCheckNAddStates(523, 525); }
                  break;
               case 157:
                  if (curChar == 34)
                     { jjCheckNAddStates(526, 530); }
                  break;
               case 159:
                  if ((0x3400L & l) != 0L)
                     { jjCheckNAddStates(523, 525); }
                  break;
               case 160:
                  if (curChar == 10)
                     { jjCheckNAddStates(523, 525); }
                  break;
               case 161:
               case 164:
                  if (curChar == 13)
                     { jjCheckNAdd(160); }
                  break;
               case 162:
                  if ((0xfc00ffffffffcbffL & l) != 0L)
                     { jjCheckNAddStates(523, 525); }
                  break;
               case 163:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(531, 536); }
                  break;
               case 165:
                  if ((0x100003600L & l) != 0L)
                     { jjCheckNAddStates(523, 525); }
                  break;
               case 166:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(537, 545); }
                  break;
               case 167:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(546, 550); }
                  break;
               case 168:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(551, 556); }
                  break;
               case 169:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(557, 563); }
                  break;
               case 170:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(564, 571); }
                  break;
               case 171:
                  if (curChar == 39)
                     { jjCheckNAddStates(572, 574); }
                  break;
               case 172:
                  if ((0xffffff7fffffcbffL & l) != 0L)
                     { jjCheckNAddStates(572, 574); }
                  break;
               case 173:
                  if (curChar == 39)
                     { jjCheckNAddStates(526, 530); }
                  break;
               case 175:
                  if ((0x3400L & l) != 0L)
                     { jjCheckNAddStates(572, 574); }
                  break;
               case 176:
                  if (curChar == 10)
                     { jjCheckNAddStates(572, 574); }
                  break;
               case 177:
               case 180:
                  if (curChar == 13)
                     { jjCheckNAdd(176); }
                  break;
               case 178:
                  if ((0xfc00ffffffffcbffL & l) != 0L)
                     { jjCheckNAddStates(572, 574); }
                  break;
               case 179:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(575, 580); }
                  break;
               case 181:
                  if ((0x100003600L & l) != 0L)
                     { jjCheckNAddStates(572, 574); }
                  break;
               case 182:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(581, 589); }
                  break;
               case 183:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(590, 594); }
                  break;
               case 184:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(595, 600); }
                  break;
               case 185:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(601, 607); }
                  break;
               case 186:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(608, 615); }
                  break;
               case 188:
                  if ((0xfc00ffffffffcbffL & l) != 0L)
                     { jjCheckNAddStates(282, 287); }
                  break;
               case 189:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(616, 623); }
                  break;
               case 190:
                  if (curChar == 10)
                     { jjCheckNAddStates(282, 287); }
                  break;
               case 191:
               case 200:
                  if (curChar == 13)
                     { jjCheckNAdd(190); }
                  break;
               case 192:
                  if ((0x100003600L & l) != 0L)
                     { jjCheckNAddStates(624, 632); }
                  break;
               case 193:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(633, 643); }
                  break;
               case 194:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(644, 650); }
                  break;
               case 195:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(651, 658); }
                  break;
               case 196:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(659, 667); }
                  break;
               case 197:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(668, 677); }
                  break;
               case 199:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(678, 685); }
                  break;
               case 201:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(686, 696); }
                  break;
               case 202:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(697, 703); }
                  break;
               case 203:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(704, 711); }
                  break;
               case 204:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(712, 720); }
                  break;
               case 205:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(721, 730); }
                  break;
               case 212:
                  if (curChar == 33)
                     jjstateSet[jjnewStateCnt++] = 211;
                  break;
               case 213:
                  if (curChar == 47)
                     { jjCheckNAddStates(731, 734); }
                  break;
               case 214:
                  if ((0x100003600L & l) != 0L)
                     { jjCheckNAddStates(735, 739); }
                  break;
               case 215:
                  if (curChar == 42)
                     { jjCheckNAddTwoStates(216, 217); }
                  break;
               case 216:
                  if ((0xfffffbffffffffffL & l) != 0L)
                     { jjCheckNAddTwoStates(216, 217); }
                  break;
               case 217:
                  if (curChar == 42)
                     { jjCheckNAddStates(740, 742); }
                  break;
               case 218:
                  if ((0xffff7bffffffffffL & l) != 0L)
                     { jjCheckNAddTwoStates(219, 220); }
                  break;
               case 219:
                  if ((0xfffffbffffffffffL & l) != 0L)
                     { jjCheckNAddTwoStates(219, 220); }
                  break;
               case 220:
                  if (curChar == 42)
                     { jjCheckNAddStates(743, 745); }
                  break;
               case 221:
                  if (curChar == 47)
                     { jjCheckNAddStates(735, 739); }
                  break;
               case 222:
                  if (curChar == 47)
                     jjstateSet[jjnewStateCnt++] = 215;
                  break;
               case 223:
                  if (curChar == 45)
                     { jjCheckNAddTwoStates(224, 247); }
                  break;
               case 225:
                  if ((0x3ff200000000000L & l) != 0L)
                     { jjCheckNAddStates(746, 749); }
                  break;
               case 226:
                  if ((0x100003600L & l) != 0L)
                     { jjCheckNAddStates(750, 752); }
                  break;
               case 227:
                  if (curChar == 42)
                     { jjCheckNAddTwoStates(228, 229); }
                  break;
               case 228:
                  if ((0xfffffbffffffffffL & l) != 0L)
                     { jjCheckNAddTwoStates(228, 229); }
                  break;
               case 229:
                  if (curChar == 42)
                     { jjCheckNAddStates(753, 755); }
                  break;
               case 230:
                  if ((0xffff7bffffffffffL & l) != 0L)
                     { jjCheckNAddTwoStates(231, 232); }
                  break;
               case 231:
                  if ((0xfffffbffffffffffL & l) != 0L)
                     { jjCheckNAddTwoStates(231, 232); }
                  break;
               case 232:
                  if (curChar == 42)
                     { jjCheckNAddStates(756, 758); }
                  break;
               case 233:
                  if (curChar == 47)
                     { jjCheckNAddStates(750, 752); }
                  break;
               case 234:
                  if (curChar == 47)
                     jjstateSet[jjnewStateCnt++] = 227;
                  break;
               case 235:
                  if (curChar == 62 && kind > 112)
                     kind = 112;
                  break;
               case 237:
                  if ((0xfc00ffffffffcbffL & l) != 0L)
                     { jjCheckNAddStates(746, 749); }
                  break;
               case 238:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(759, 764); }
                  break;
               case 239:
                  if (curChar == 10)
                     { jjCheckNAddStates(746, 749); }
                  break;
               case 240:
               case 249:
                  if (curChar == 13)
                     { jjCheckNAdd(239); }
                  break;
               case 241:
                  if ((0x100003600L & l) != 0L)
                     { jjCheckNAddStates(765, 770); }
                  break;
               case 242:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(771, 779); }
                  break;
               case 243:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(780, 784); }
                  break;
               case 244:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(785, 790); }
                  break;
               case 245:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(791, 797); }
                  break;
               case 246:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(798, 805); }
                  break;
               case 248:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(806, 811); }
                  break;
               case 250:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(812, 820); }
                  break;
               case 251:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(821, 825); }
                  break;
               case 252:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(826, 831); }
                  break;
               case 253:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(832, 838); }
                  break;
               case 254:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(839, 846); }
                  break;
               case 255:
                  if (curChar == 60)
                     jjstateSet[jjnewStateCnt++] = 213;
                  break;
               case 256:
                  if ((0x9000807200000000L & l) != 0L && kind > 113)
                     kind = 113;
                  break;
               case 257:
                  if (curChar == 45)
                     { jjAddStates(184, 185); }
                  break;
               case 262:
                  if (curChar == 45)
                     jjstateSet[jjnewStateCnt++] = 261;
                  break;
               case 270:
                  if (curChar == 45)
                     jjstateSet[jjnewStateCnt++] = 269;
                  break;
               case 277:
                  if ((0x100003600L & l) == 0L)
                     break;
                  if (kind > 21)
                     kind = 21;
                  { jjCheckNAddStates(111, 130); }
                  break;
               case 278:
                  if (curChar == 42)
                     { jjCheckNAddTwoStates(279, 280); }
                  break;
               case 279:
                  if ((0xfffffbffffffffffL & l) != 0L)
                     { jjCheckNAddTwoStates(279, 280); }
                  break;
               case 280:
                  if (curChar == 42)
                     { jjCheckNAddStates(847, 849); }
                  break;
               case 281:
                  if ((0xffff7bffffffffffL & l) != 0L)
                     { jjCheckNAddTwoStates(282, 283); }
                  break;
               case 282:
                  if ((0xfffffbffffffffffL & l) != 0L)
                     { jjCheckNAddTwoStates(282, 283); }
                  break;
               case 283:
                  if (curChar == 42)
                     { jjCheckNAddStates(850, 852); }
                  break;
               case 284:
                  if (curChar != 47)
                     break;
                  if (kind > 21)
                     kind = 21;
                  { jjCheckNAddTwoStates(285, 286); }
                  break;
               case 285:
                  if (curChar == 47)
                     jjstateSet[jjnewStateCnt++] = 278;
                  break;
               case 286:
                  if ((0x100003600L & l) == 0L)
                     break;
                  if (kind > 21)
                     kind = 21;
                  { jjCheckNAddTwoStates(285, 286); }
                  break;
               case 287:
                  if (curChar == 42)
                     { jjCheckNAddTwoStates(288, 289); }
                  break;
               case 288:
                  if ((0xfffffbffffffffffL & l) != 0L)
                     { jjCheckNAddTwoStates(288, 289); }
                  break;
               case 289:
                  if (curChar == 42)
                     { jjCheckNAddStates(853, 855); }
                  break;
               case 290:
                  if ((0xffff7bffffffffffL & l) != 0L)
                     { jjCheckNAddTwoStates(291, 292); }
                  break;
               case 291:
                  if ((0xfffffbffffffffffL & l) != 0L)
                     { jjCheckNAddTwoStates(291, 292); }
                  break;
               case 292:
                  if (curChar == 42)
                     { jjCheckNAddStates(856, 858); }
                  break;
               case 293:
                  if (curChar == 47)
                     { jjCheckNAddStates(859, 861); }
                  break;
               case 294:
                  if (curChar == 47)
                     jjstateSet[jjnewStateCnt++] = 287;
                  break;
               case 295:
                  if ((0x100003600L & l) != 0L)
                     { jjCheckNAddStates(859, 861); }
                  break;
               case 297:
                  if (curChar == 61 && kind > 24)
                     kind = 24;
                  break;
               case 298:
                  if (curChar == 42)
                     { jjCheckNAddTwoStates(299, 300); }
                  break;
               case 299:
                  if ((0xfffffbffffffffffL & l) != 0L)
                     { jjCheckNAddTwoStates(299, 300); }
                  break;
               case 300:
                  if (curChar == 42)
                     { jjCheckNAddStates(862, 864); }
                  break;
               case 301:
                  if ((0xffff7bffffffffffL & l) != 0L)
                     { jjCheckNAddTwoStates(302, 303); }
                  break;
               case 302:
                  if ((0xfffffbffffffffffL & l) != 0L)
                     { jjCheckNAddTwoStates(302, 303); }
                  break;
               case 303:
                  if (curChar == 42)
                     { jjCheckNAddStates(865, 867); }
                  break;
               case 304:
                  if (curChar == 47)
                     { jjCheckNAddStates(868, 870); }
                  break;
               case 305:
                  if (curChar == 47)
                     jjstateSet[jjnewStateCnt++] = 298;
                  break;
               case 306:
                  if ((0x100003600L & l) != 0L)
                     { jjCheckNAddStates(868, 870); }
                  break;
               case 307:
                  if (curChar == 42)
                     { jjCheckNAddTwoStates(308, 309); }
                  break;
               case 308:
                  if ((0xfffffbffffffffffL & l) != 0L)
                     { jjCheckNAddTwoStates(308, 309); }
                  break;
               case 309:
                  if (curChar == 42)
                     { jjCheckNAddStates(871, 873); }
                  break;
               case 310:
                  if ((0xffff7bffffffffffL & l) != 0L)
                     { jjCheckNAddTwoStates(311, 312); }
                  break;
               case 311:
                  if ((0xfffffbffffffffffL & l) != 0L)
                     { jjCheckNAddTwoStates(311, 312); }
                  break;
               case 312:
                  if (curChar == 42)
                     { jjCheckNAddStates(874, 876); }
                  break;
               case 313:
                  if (curChar == 47)
                     { jjCheckNAddStates(877, 879); }
                  break;
               case 314:
                  if (curChar == 47)
                     jjstateSet[jjnewStateCnt++] = 307;
                  break;
               case 315:
                  if ((0x100003600L & l) != 0L)
                     { jjCheckNAddStates(877, 879); }
                  break;
               case 316:
                  if (curChar == 42)
                     { jjCheckNAddTwoStates(317, 318); }
                  break;
               case 317:
                  if ((0xfffffbffffffffffL & l) != 0L)
                     { jjCheckNAddTwoStates(317, 318); }
                  break;
               case 318:
                  if (curChar == 42)
                     { jjCheckNAddStates(880, 882); }
                  break;
               case 319:
                  if ((0xffff7bffffffffffL & l) != 0L)
                     { jjCheckNAddTwoStates(320, 321); }
                  break;
               case 320:
                  if ((0xfffffbffffffffffL & l) != 0L)
                     { jjCheckNAddTwoStates(320, 321); }
                  break;
               case 321:
                  if (curChar == 42)
                     { jjCheckNAddStates(883, 885); }
                  break;
               case 322:
                  if (curChar == 47)
                     { jjCheckNAddStates(886, 888); }
                  break;
               case 323:
                  if (curChar == 47)
                     jjstateSet[jjnewStateCnt++] = 316;
                  break;
               case 324:
                  if ((0x100003600L & l) != 0L)
                     { jjCheckNAddStates(886, 888); }
                  break;
               case 325:
                  if (curChar == 42)
                     { jjCheckNAddTwoStates(326, 327); }
                  break;
               case 326:
                  if ((0xfffffbffffffffffL & l) != 0L)
                     { jjCheckNAddTwoStates(326, 327); }
                  break;
               case 327:
                  if (curChar == 42)
                     { jjCheckNAddStates(889, 891); }
                  break;
               case 328:
                  if ((0xffff7bffffffffffL & l) != 0L)
                     { jjCheckNAddTwoStates(329, 330); }
                  break;
               case 329:
                  if ((0xfffffbffffffffffL & l) != 0L)
                     { jjCheckNAddTwoStates(329, 330); }
                  break;
               case 330:
                  if (curChar == 42)
                     { jjCheckNAddStates(892, 894); }
                  break;
               case 331:
                  if (curChar == 47)
                     { jjCheckNAddStates(895, 897); }
                  break;
               case 332:
                  if (curChar == 47)
                     jjstateSet[jjnewStateCnt++] = 325;
                  break;
               case 333:
                  if ((0x100003600L & l) != 0L)
                     { jjCheckNAddStates(895, 897); }
                  break;
               case 334:
                  if (curChar == 42)
                     { jjCheckNAddTwoStates(335, 336); }
                  break;
               case 335:
                  if ((0xfffffbffffffffffL & l) != 0L)
                     { jjCheckNAddTwoStates(335, 336); }
                  break;
               case 336:
                  if (curChar == 42)
                     { jjCheckNAddStates(898, 900); }
                  break;
               case 337:
                  if ((0xffff7bffffffffffL & l) != 0L)
                     { jjCheckNAddTwoStates(338, 339); }
                  break;
               case 338:
                  if ((0xfffffbffffffffffL & l) != 0L)
                     { jjCheckNAddTwoStates(338, 339); }
                  break;
               case 339:
                  if (curChar == 42)
                     { jjCheckNAddStates(901, 903); }
                  break;
               case 340:
                  if (curChar == 47)
                     { jjCheckNAddStates(904, 906); }
                  break;
               case 341:
                  if (curChar == 47)
                     jjstateSet[jjnewStateCnt++] = 334;
                  break;
               case 342:
                  if ((0x100003600L & l) != 0L)
                     { jjCheckNAddStates(904, 906); }
                  break;
               case 345:
                  if (curChar != 34)
                     break;
                  if (kind > 37)
                     kind = 37;
                  { jjCheckNAddStates(175, 179); }
                  break;
               case 346:
                  if ((0xfffffffbffffcbffL & l) != 0L)
                     { jjCheckNAddStates(907, 909); }
                  break;
               case 347:
                  if (curChar == 34 && kind > 36)
                     kind = 36;
                  break;
               case 349:
                  if ((0x3400L & l) != 0L)
                     { jjCheckNAddStates(907, 909); }
                  break;
               case 350:
                  if (curChar == 10)
                     { jjCheckNAddStates(907, 909); }
                  break;
               case 351:
               case 354:
                  if (curChar == 13)
                     { jjCheckNAdd(350); }
                  break;
               case 352:
                  if ((0xfc00ffffffffcbffL & l) != 0L)
                     { jjCheckNAddStates(907, 909); }
                  break;
               case 353:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(910, 915); }
                  break;
               case 355:
                  if ((0x100003600L & l) != 0L)
                     { jjCheckNAddStates(907, 909); }
                  break;
               case 356:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(916, 924); }
                  break;
               case 357:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(925, 929); }
                  break;
               case 358:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(930, 935); }
                  break;
               case 359:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(936, 942); }
                  break;
               case 360:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(943, 950); }
                  break;
               case 361:
                  if ((0xfffffffbffffcbffL & l) == 0L)
                     break;
                  if (kind > 37)
                     kind = 37;
                  { jjCheckNAddTwoStates(361, 362); }
                  break;
               case 363:
                  if ((0x3400L & l) == 0L)
                     break;
                  if (kind > 37)
                     kind = 37;
                  { jjCheckNAddTwoStates(361, 362); }
                  break;
               case 364:
                  if (curChar != 10)
                     break;
                  if (kind > 37)
                     kind = 37;
                  { jjCheckNAddTwoStates(361, 362); }
                  break;
               case 365:
               case 368:
                  if (curChar == 13)
                     { jjCheckNAdd(364); }
                  break;
               case 366:
                  if ((0xfc00ffffffffcbffL & l) == 0L)
                     break;
                  if (kind > 37)
                     kind = 37;
                  { jjCheckNAddTwoStates(361, 362); }
                  break;
               case 367:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 37)
                     kind = 37;
                  { jjCheckNAddStates(951, 955); }
                  break;
               case 369:
                  if ((0x100003600L & l) == 0L)
                     break;
                  if (kind > 37)
                     kind = 37;
                  { jjCheckNAddTwoStates(361, 362); }
                  break;
               case 370:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 37)
                     kind = 37;
                  { jjCheckNAddStates(956, 963); }
                  break;
               case 371:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 37)
                     kind = 37;
                  { jjCheckNAddStates(964, 967); }
                  break;
               case 372:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 37)
                     kind = 37;
                  { jjCheckNAddStates(968, 972); }
                  break;
               case 373:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 37)
                     kind = 37;
                  { jjCheckNAddStates(973, 978); }
                  break;
               case 374:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 37)
                     kind = 37;
                  { jjCheckNAddStates(979, 985); }
                  break;
               case 375:
                  if (curChar != 39)
                     break;
                  if (kind > 37)
                     kind = 37;
                  { jjCheckNAddStates(170, 174); }
                  break;
               case 376:
                  if ((0xffffff7fffffcbffL & l) != 0L)
                     { jjCheckNAddStates(986, 988); }
                  break;
               case 377:
                  if (curChar == 39 && kind > 36)
                     kind = 36;
                  break;
               case 379:
                  if ((0x3400L & l) != 0L)
                     { jjCheckNAddStates(986, 988); }
                  break;
               case 380:
                  if (curChar == 10)
                     { jjCheckNAddStates(986, 988); }
                  break;
               case 381:
               case 384:
                  if (curChar == 13)
                     { jjCheckNAdd(380); }
                  break;
               case 382:
                  if ((0xfc00ffffffffcbffL & l) != 0L)
                     { jjCheckNAddStates(986, 988); }
                  break;
               case 383:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(989, 994); }
                  break;
               case 385:
                  if ((0x100003600L & l) != 0L)
                     { jjCheckNAddStates(986, 988); }
                  break;
               case 386:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(995, 1003); }
                  break;
               case 387:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1004, 1008); }
                  break;
               case 388:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1009, 1014); }
                  break;
               case 389:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1015, 1021); }
                  break;
               case 390:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1022, 1029); }
                  break;
               case 391:
                  if ((0xffffff7fffffcbffL & l) == 0L)
                     break;
                  if (kind > 37)
                     kind = 37;
                  { jjCheckNAddTwoStates(391, 392); }
                  break;
               case 393:
                  if ((0x3400L & l) == 0L)
                     break;
                  if (kind > 37)
                     kind = 37;
                  { jjCheckNAddTwoStates(391, 392); }
                  break;
               case 394:
                  if (curChar != 10)
                     break;
                  if (kind > 37)
                     kind = 37;
                  { jjCheckNAddTwoStates(391, 392); }
                  break;
               case 395:
               case 398:
                  if (curChar == 13)
                     { jjCheckNAdd(394); }
                  break;
               case 396:
                  if ((0xfc00ffffffffcbffL & l) == 0L)
                     break;
                  if (kind > 37)
                     kind = 37;
                  { jjCheckNAddTwoStates(391, 392); }
                  break;
               case 397:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 37)
                     kind = 37;
                  { jjCheckNAddStates(1030, 1034); }
                  break;
               case 399:
                  if ((0x100003600L & l) == 0L)
                     break;
                  if (kind > 37)
                     kind = 37;
                  { jjCheckNAddTwoStates(391, 392); }
                  break;
               case 400:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 37)
                     kind = 37;
                  { jjCheckNAddStates(1035, 1042); }
                  break;
               case 401:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 37)
                     kind = 37;
                  { jjCheckNAddStates(1043, 1046); }
                  break;
               case 402:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 37)
                     kind = 37;
                  { jjCheckNAddStates(1047, 1051); }
                  break;
               case 403:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 37)
                     kind = 37;
                  { jjCheckNAddStates(1052, 1057); }
                  break;
               case 404:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 37)
                     kind = 37;
                  { jjCheckNAddStates(1058, 1064); }
                  break;
               case 405:
                  if (curChar == 45)
                     { jjAddStates(165, 169); }
                  break;
               case 407:
                  if ((0x3ff200000000000L & l) == 0L)
                     break;
                  if (kind > 38)
                     kind = 38;
                  { jjCheckNAddTwoStates(407, 408); }
                  break;
               case 409:
                  if ((0xfc00ffffffffcbffL & l) == 0L)
                     break;
                  if (kind > 38)
                     kind = 38;
                  { jjCheckNAddTwoStates(407, 408); }
                  break;
               case 410:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 38)
                     kind = 38;
                  { jjCheckNAddStates(1065, 1069); }
                  break;
               case 411:
                  if (curChar != 10)
                     break;
                  if (kind > 38)
                     kind = 38;
                  { jjCheckNAddTwoStates(407, 408); }
                  break;
               case 412:
               case 465:
                  if (curChar == 13)
                     { jjCheckNAdd(411); }
                  break;
               case 413:
                  if ((0x100003600L & l) == 0L)
                     break;
                  if (kind > 38)
                     kind = 38;
                  { jjCheckNAddTwoStates(407, 408); }
                  break;
               case 414:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 38)
                     kind = 38;
                  { jjCheckNAddStates(1070, 1077); }
                  break;
               case 415:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 38)
                     kind = 38;
                  { jjCheckNAddStates(1078, 1081); }
                  break;
               case 416:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 38)
                     kind = 38;
                  { jjCheckNAddStates(1082, 1086); }
                  break;
               case 417:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 38)
                     kind = 38;
                  { jjCheckNAddStates(1087, 1092); }
                  break;
               case 418:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 38)
                     kind = 38;
                  { jjCheckNAddStates(1093, 1099); }
                  break;
               case 419:
                  if (curChar == 45)
                     { jjAddStates(1100, 1101); }
                  break;
               case 421:
                  if ((0x3ff200000000000L & l) == 0L)
                     break;
                  if (kind > 42)
                     kind = 42;
                  { jjCheckNAddTwoStates(421, 422); }
                  break;
               case 423:
                  if ((0xfc00ffffffffcbffL & l) == 0L)
                     break;
                  if (kind > 42)
                     kind = 42;
                  { jjCheckNAddTwoStates(421, 422); }
                  break;
               case 424:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 42)
                     kind = 42;
                  { jjCheckNAddStates(1102, 1106); }
                  break;
               case 425:
                  if (curChar != 10)
                     break;
                  if (kind > 42)
                     kind = 42;
                  { jjCheckNAddTwoStates(421, 422); }
                  break;
               case 426:
               case 435:
                  if (curChar == 13)
                     { jjCheckNAdd(425); }
                  break;
               case 427:
                  if ((0x100003600L & l) == 0L)
                     break;
                  if (kind > 42)
                     kind = 42;
                  { jjCheckNAddTwoStates(421, 422); }
                  break;
               case 428:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 42)
                     kind = 42;
                  { jjCheckNAddStates(1107, 1114); }
                  break;
               case 429:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 42)
                     kind = 42;
                  { jjCheckNAddStates(1115, 1118); }
                  break;
               case 430:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 42)
                     kind = 42;
                  { jjCheckNAddStates(1119, 1123); }
                  break;
               case 431:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 42)
                     kind = 42;
                  { jjCheckNAddStates(1124, 1129); }
                  break;
               case 432:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 42)
                     kind = 42;
                  { jjCheckNAddStates(1130, 1136); }
                  break;
               case 434:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 42)
                     kind = 42;
                  { jjCheckNAddStates(1137, 1141); }
                  break;
               case 436:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 42)
                     kind = 42;
                  { jjCheckNAddStates(1142, 1149); }
                  break;
               case 437:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 42)
                     kind = 42;
                  { jjCheckNAddStates(1150, 1153); }
                  break;
               case 438:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 42)
                     kind = 42;
                  { jjCheckNAddStates(1154, 1158); }
                  break;
               case 439:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 42)
                     kind = 42;
                  { jjCheckNAddStates(1159, 1164); }
                  break;
               case 440:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 42)
                     kind = 42;
                  { jjCheckNAddStates(1165, 1171); }
                  break;
               case 442:
                  if ((0x3ff200000000000L & l) != 0L)
                     { jjCheckNAddStates(1172, 1174); }
                  break;
               case 443:
                  if (curChar == 40 && kind > 110)
                     kind = 110;
                  break;
               case 445:
                  if ((0xfc00ffffffffcbffL & l) != 0L)
                     { jjCheckNAddStates(1172, 1174); }
                  break;
               case 446:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1175, 1180); }
                  break;
               case 447:
                  if (curChar == 10)
                     { jjCheckNAddStates(1172, 1174); }
                  break;
               case 448:
               case 457:
                  if (curChar == 13)
                     { jjCheckNAdd(447); }
                  break;
               case 449:
                  if ((0x100003600L & l) != 0L)
                     { jjCheckNAddStates(1172, 1174); }
                  break;
               case 450:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1181, 1189); }
                  break;
               case 451:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1190, 1194); }
                  break;
               case 452:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1195, 1200); }
                  break;
               case 453:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1201, 1207); }
                  break;
               case 454:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1208, 1215); }
                  break;
               case 456:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1216, 1221); }
                  break;
               case 458:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1222, 1230); }
                  break;
               case 459:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1231, 1235); }
                  break;
               case 460:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1236, 1241); }
                  break;
               case 461:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1242, 1248); }
                  break;
               case 462:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1249, 1256); }
                  break;
               case 464:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 38)
                     kind = 38;
                  { jjCheckNAddStates(1257, 1261); }
                  break;
               case 466:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 38)
                     kind = 38;
                  { jjCheckNAddStates(1262, 1269); }
                  break;
               case 467:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 38)
                     kind = 38;
                  { jjCheckNAddStates(1270, 1273); }
                  break;
               case 468:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 38)
                     kind = 38;
                  { jjCheckNAddStates(1274, 1278); }
                  break;
               case 469:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 38)
                     kind = 38;
                  { jjCheckNAddStates(1279, 1284); }
                  break;
               case 470:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 38)
                     kind = 38;
                  { jjCheckNAddStates(1285, 1291); }
                  break;
               case 472:
                  if (curChar == 35)
                     { jjCheckNAddStates(160, 164); }
                  break;
               case 473:
                  if (curChar == 45)
                     { jjCheckNAddTwoStates(474, 487); }
                  break;
               case 475:
                  if ((0x3ff200000000000L & l) == 0L)
                     break;
                  if (kind > 39)
                     kind = 39;
                  { jjCheckNAddTwoStates(475, 476); }
                  break;
               case 477:
                  if ((0xfc00ffffffffcbffL & l) == 0L)
                     break;
                  if (kind > 39)
                     kind = 39;
                  { jjCheckNAddTwoStates(475, 476); }
                  break;
               case 478:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 39)
                     kind = 39;
                  { jjCheckNAddStates(1292, 1296); }
                  break;
               case 479:
                  if (curChar != 10)
                     break;
                  if (kind > 39)
                     kind = 39;
                  { jjCheckNAddTwoStates(475, 476); }
                  break;
               case 480:
               case 489:
                  if (curChar == 13)
                     { jjCheckNAdd(479); }
                  break;
               case 481:
                  if ((0x100003600L & l) == 0L)
                     break;
                  if (kind > 39)
                     kind = 39;
                  { jjCheckNAddTwoStates(475, 476); }
                  break;
               case 482:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 39)
                     kind = 39;
                  { jjCheckNAddStates(1297, 1304); }
                  break;
               case 483:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 39)
                     kind = 39;
                  { jjCheckNAddStates(1305, 1308); }
                  break;
               case 484:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 39)
                     kind = 39;
                  { jjCheckNAddStates(1309, 1313); }
                  break;
               case 485:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 39)
                     kind = 39;
                  { jjCheckNAddStates(1314, 1319); }
                  break;
               case 486:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 39)
                     kind = 39;
                  { jjCheckNAddStates(1320, 1326); }
                  break;
               case 488:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 39)
                     kind = 39;
                  { jjCheckNAddStates(1327, 1331); }
                  break;
               case 490:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 39)
                     kind = 39;
                  { jjCheckNAddStates(1332, 1339); }
                  break;
               case 491:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 39)
                     kind = 39;
                  { jjCheckNAddStates(1340, 1343); }
                  break;
               case 492:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 39)
                     kind = 39;
                  { jjCheckNAddStates(1344, 1348); }
                  break;
               case 493:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 39)
                     kind = 39;
                  { jjCheckNAddStates(1349, 1354); }
                  break;
               case 494:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 39)
                     kind = 39;
                  { jjCheckNAddStates(1355, 1361); }
                  break;
               case 495:
                  if ((0x3ff200000000000L & l) == 0L)
                     break;
                  if (kind > 40)
                     kind = 40;
                  { jjCheckNAddTwoStates(495, 496); }
                  break;
               case 497:
                  if ((0xfc00ffffffffcbffL & l) == 0L)
                     break;
                  if (kind > 40)
                     kind = 40;
                  { jjCheckNAddTwoStates(495, 496); }
                  break;
               case 498:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 40)
                     kind = 40;
                  { jjCheckNAddStates(1362, 1366); }
                  break;
               case 499:
                  if (curChar != 10)
                     break;
                  if (kind > 40)
                     kind = 40;
                  { jjCheckNAddTwoStates(495, 496); }
                  break;
               case 500:
                  if (curChar == 13)
                     jjstateSet[jjnewStateCnt++] = 499;
                  break;
               case 501:
                  if ((0x100003600L & l) == 0L)
                     break;
                  if (kind > 40)
                     kind = 40;
                  { jjCheckNAddTwoStates(495, 496); }
                  break;
               case 502:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 40)
                     kind = 40;
                  { jjCheckNAddStates(1367, 1374); }
                  break;
               case 503:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 40)
                     kind = 40;
                  { jjCheckNAddStates(1375, 1378); }
                  break;
               case 504:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 40)
                     kind = 40;
                  { jjCheckNAddStates(1379, 1383); }
                  break;
               case 505:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 40)
                     kind = 40;
                  { jjCheckNAddStates(1384, 1389); }
                  break;
               case 506:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 40)
                     kind = 40;
                  { jjCheckNAddStates(1390, 1396); }
                  break;
               case 508:
                  if (curChar == 40)
                     { jjCheckNAddStates(1397, 1402); }
                  break;
               case 509:
                  if (curChar == 34)
                     { jjCheckNAddStates(1403, 1405); }
                  break;
               case 510:
                  if ((0xfffffffbffffcbffL & l) != 0L)
                     { jjCheckNAddStates(1403, 1405); }
                  break;
               case 511:
                  if (curChar == 34)
                     { jjCheckNAddTwoStates(512, 521); }
                  break;
               case 512:
                  if ((0x100003600L & l) != 0L)
                     { jjCheckNAddStates(1406, 1408); }
                  break;
               case 513:
                  if (curChar == 42)
                     { jjCheckNAddTwoStates(514, 515); }
                  break;
               case 514:
                  if ((0xfffffbffffffffffL & l) != 0L)
                     { jjCheckNAddTwoStates(514, 515); }
                  break;
               case 515:
                  if (curChar == 42)
                     { jjCheckNAddStates(1409, 1411); }
                  break;
               case 516:
                  if ((0xffff7bffffffffffL & l) != 0L)
                     { jjCheckNAddTwoStates(517, 518); }
                  break;
               case 517:
                  if ((0xfffffbffffffffffL & l) != 0L)
                     { jjCheckNAddTwoStates(517, 518); }
                  break;
               case 518:
                  if (curChar == 42)
                     { jjCheckNAddStates(1412, 1414); }
                  break;
               case 519:
                  if (curChar == 47)
                     { jjCheckNAddStates(1406, 1408); }
                  break;
               case 520:
                  if (curChar == 47)
                     jjstateSet[jjnewStateCnt++] = 513;
                  break;
               case 521:
                  if (curChar == 41 && kind > 57)
                     kind = 57;
                  break;
               case 523:
                  if ((0x3400L & l) != 0L)
                     { jjCheckNAddStates(1403, 1405); }
                  break;
               case 524:
                  if (curChar == 10)
                     { jjCheckNAddStates(1403, 1405); }
                  break;
               case 525:
               case 528:
                  if (curChar == 13)
                     { jjCheckNAdd(524); }
                  break;
               case 526:
                  if ((0xfc00ffffffffcbffL & l) != 0L)
                     { jjCheckNAddStates(1403, 1405); }
                  break;
               case 527:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1415, 1420); }
                  break;
               case 529:
                  if ((0x100003600L & l) != 0L)
                     { jjCheckNAddStates(1403, 1405); }
                  break;
               case 530:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1421, 1429); }
                  break;
               case 531:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1430, 1434); }
                  break;
               case 532:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1435, 1440); }
                  break;
               case 533:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1441, 1447); }
                  break;
               case 534:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1448, 1455); }
                  break;
               case 535:
                  if (curChar == 39)
                     { jjCheckNAddStates(1456, 1458); }
                  break;
               case 536:
                  if ((0xffffff7fffffcbffL & l) != 0L)
                     { jjCheckNAddStates(1456, 1458); }
                  break;
               case 537:
                  if (curChar == 39)
                     { jjCheckNAddTwoStates(512, 521); }
                  break;
               case 539:
                  if ((0x3400L & l) != 0L)
                     { jjCheckNAddStates(1456, 1458); }
                  break;
               case 540:
                  if (curChar == 10)
                     { jjCheckNAddStates(1456, 1458); }
                  break;
               case 541:
               case 544:
                  if (curChar == 13)
                     { jjCheckNAdd(540); }
                  break;
               case 542:
                  if ((0xfc00ffffffffcbffL & l) != 0L)
                     { jjCheckNAddStates(1456, 1458); }
                  break;
               case 543:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1459, 1464); }
                  break;
               case 545:
                  if ((0x100003600L & l) != 0L)
                     { jjCheckNAddStates(1456, 1458); }
                  break;
               case 546:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1465, 1473); }
                  break;
               case 547:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1474, 1478); }
                  break;
               case 548:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1479, 1484); }
                  break;
               case 549:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1485, 1491); }
                  break;
               case 550:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1492, 1499); }
                  break;
               case 551:
                  if ((0xfffffc7a00000000L & l) != 0L)
                     { jjCheckNAddStates(1500, 1503); }
                  break;
               case 553:
                  if ((0xfc00ffffffffcbffL & l) != 0L)
                     { jjCheckNAddStates(1500, 1503); }
                  break;
               case 554:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1504, 1509); }
                  break;
               case 555:
                  if (curChar == 10)
                     { jjCheckNAddStates(1500, 1503); }
                  break;
               case 556:
                  if (curChar == 13)
                     jjstateSet[jjnewStateCnt++] = 555;
                  break;
               case 557:
                  if ((0x100003600L & l) != 0L)
                     { jjCheckNAddStates(1510, 1515); }
                  break;
               case 558:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1516, 1524); }
                  break;
               case 559:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1525, 1529); }
                  break;
               case 560:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1530, 1535); }
                  break;
               case 561:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1536, 1542); }
                  break;
               case 562:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1543, 1550); }
                  break;
               case 563:
                  if ((0x100003600L & l) != 0L)
                     { jjCheckNAddStates(1551, 1559); }
                  break;
               case 564:
                  if (curChar == 42)
                     { jjCheckNAddTwoStates(565, 566); }
                  break;
               case 565:
                  if ((0xfffffbffffffffffL & l) != 0L)
                     { jjCheckNAddTwoStates(565, 566); }
                  break;
               case 566:
                  if (curChar == 42)
                     { jjCheckNAddStates(1560, 1562); }
                  break;
               case 567:
                  if ((0xffff7bffffffffffL & l) != 0L)
                     { jjCheckNAddTwoStates(568, 569); }
                  break;
               case 568:
                  if ((0xfffffbffffffffffL & l) != 0L)
                     { jjCheckNAddTwoStates(568, 569); }
                  break;
               case 569:
                  if (curChar == 42)
                     { jjCheckNAddStates(1563, 1565); }
                  break;
               case 570:
                  if (curChar == 47)
                     { jjCheckNAddStates(1566, 1572); }
                  break;
               case 571:
                  if (curChar == 47)
                     jjstateSet[jjnewStateCnt++] = 564;
                  break;
               case 574:
                  if (curChar == 43)
                     { jjAddStates(1573, 1574); }
                  break;
               case 575:
                  if (curChar != 63)
                     break;
                  if (kind > 103)
                     kind = 103;
                  jjstateSet[jjnewStateCnt++] = 576;
                  break;
               case 576:
                  if (curChar != 63)
                     break;
                  if (kind > 103)
                     kind = 103;
                  { jjCheckNAddStates(1575, 1578); }
                  break;
               case 577:
                  if (curChar == 63 && kind > 103)
                     kind = 103;
                  break;
               case 578:
               case 594:
               case 598:
               case 601:
               case 604:
                  if (curChar != 63)
                     break;
                  if (kind > 103)
                     kind = 103;
                  { jjCheckNAdd(577); }
                  break;
               case 579:
                  if (curChar != 63)
                     break;
                  if (kind > 103)
                     kind = 103;
                  { jjCheckNAddTwoStates(577, 578); }
                  break;
               case 580:
                  if (curChar != 63)
                     break;
                  if (kind > 103)
                     kind = 103;
                  { jjCheckNAddStates(1579, 1581); }
                  break;
               case 581:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 103)
                     kind = 103;
                  { jjAddStates(1582, 1587); }
                  break;
               case 582:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 583;
                  break;
               case 583:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 584;
                  break;
               case 584:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 585;
                  break;
               case 585:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAdd(586); }
                  break;
               case 586:
                  if ((0x3ff000000000000L & l) != 0L && kind > 103)
                     kind = 103;
                  break;
               case 587:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 588;
                  break;
               case 588:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 589;
                  break;
               case 589:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 590;
                  break;
               case 590:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 103)
                     kind = 103;
                  { jjCheckNAdd(577); }
                  break;
               case 591:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 592;
                  break;
               case 592:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 593;
                  break;
               case 593:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 103)
                     kind = 103;
                  jjstateSet[jjnewStateCnt++] = 594;
                  break;
               case 595:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 596;
                  break;
               case 596:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 103)
                     kind = 103;
                  jjstateSet[jjnewStateCnt++] = 597;
                  break;
               case 597:
                  if (curChar != 63)
                     break;
                  if (kind > 103)
                     kind = 103;
                  { jjCheckNAddTwoStates(577, 598); }
                  break;
               case 599:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 103)
                     kind = 103;
                  jjstateSet[jjnewStateCnt++] = 600;
                  break;
               case 600:
                  if (curChar != 63)
                     break;
                  if (kind > 103)
                     kind = 103;
                  { jjCheckNAddStates(1588, 1590); }
                  break;
               case 602:
                  if (curChar != 63)
                     break;
                  if (kind > 103)
                     kind = 103;
                  { jjCheckNAddTwoStates(577, 601); }
                  break;
               case 603:
                  if (curChar != 63)
                     break;
                  if (kind > 103)
                     kind = 103;
                  { jjCheckNAddStates(1591, 1594); }
                  break;
               case 605:
                  if (curChar != 63)
                     break;
                  if (kind > 103)
                     kind = 103;
                  { jjCheckNAddTwoStates(577, 604); }
                  break;
               case 606:
                  if (curChar != 63)
                     break;
                  if (kind > 103)
                     kind = 103;
                  { jjCheckNAddStates(1595, 1597); }
                  break;
               case 607:
                  if (curChar == 43)
                     jjstateSet[jjnewStateCnt++] = 608;
                  break;
               case 608:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(609, 615); }
                  break;
               case 609:
                  if (curChar == 45)
                     jjstateSet[jjnewStateCnt++] = 610;
                  break;
               case 610:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 103)
                     kind = 103;
                  jjstateSet[jjnewStateCnt++] = 611;
                  break;
               case 611:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 103)
                     kind = 103;
                  { jjCheckNAddStates(1598, 1601); }
                  break;
               case 612:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 103)
                     kind = 103;
                  { jjCheckNAdd(586); }
                  break;
               case 613:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 103)
                     kind = 103;
                  { jjCheckNAddTwoStates(586, 612); }
                  break;
               case 614:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 103)
                     kind = 103;
                  { jjCheckNAddStates(1602, 1604); }
                  break;
               case 615:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1605, 1609); }
                  break;
               case 616:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAdd(609); }
                  break;
               case 617:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(616, 609); }
                  break;
               case 618:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1610, 1612); }
                  break;
               case 619:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1613, 1616); }
                  break;
               case 620:
                  if (curChar == 46)
                     { jjCheckNAddStates(131, 159); }
                  break;
               case 621:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(621, 623); }
                  break;
               case 624:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(624, 626); }
                  break;
               case 627:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(627, 629); }
                  break;
               case 630:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(630, 632); }
                  break;
               case 633:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(633, 635); }
                  break;
               case 636:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(636, 638); }
                  break;
               case 639:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(639, 643); }
                  break;
               case 644:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(644, 648); }
                  break;
               case 649:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(649, 651); }
                  break;
               case 652:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(652, 653); }
                  break;
               case 654:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(654, 655); }
                  break;
               case 656:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(656, 658); }
                  break;
               case 659:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(659, 661); }
                  break;
               case 662:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(662, 664); }
                  break;
               case 665:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(665, 667); }
                  break;
               case 668:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(668, 670); }
                  break;
               case 671:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1617, 1621); }
                  break;
               case 685:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(685, 687); }
                  break;
               case 688:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(688, 690); }
                  break;
               case 691:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1622, 1624); }
                  break;
               case 695:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1625, 1627); }
                  break;
               case 700:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1628, 1630); }
                  break;
               case 711:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1631, 1633); }
                  break;
               case 713:
                  if ((0x3ff200000000000L & l) != 0L)
                     { jjCheckNAddStates(1634, 1636); }
                  break;
               case 714:
                  if (curChar == 57 && kind > 68)
                     kind = 68;
                  break;
               case 717:
                  if ((0xfc00ffffffffcbffL & l) != 0L)
                     { jjCheckNAddStates(1634, 1636); }
                  break;
               case 718:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1637, 1642); }
                  break;
               case 719:
                  if (curChar == 10)
                     { jjCheckNAddStates(1634, 1636); }
                  break;
               case 720:
               case 729:
                  if (curChar == 13)
                     { jjCheckNAdd(719); }
                  break;
               case 721:
                  if ((0x100003600L & l) != 0L)
                     { jjCheckNAddStates(1634, 1636); }
                  break;
               case 722:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1643, 1651); }
                  break;
               case 723:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1652, 1656); }
                  break;
               case 724:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1657, 1662); }
                  break;
               case 725:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1663, 1669); }
                  break;
               case 726:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1670, 1677); }
                  break;
               case 728:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1678, 1683); }
                  break;
               case 730:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1684, 1692); }
                  break;
               case 731:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1693, 1697); }
                  break;
               case 732:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1698, 1703); }
                  break;
               case 733:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1704, 1710); }
                  break;
               case 734:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1711, 1718); }
                  break;
               case 735:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1719, 1721); }
                  break;
               case 737:
                  if ((0x3ff200000000000L & l) == 0L)
                     break;
                  if (kind > 69)
                     kind = 69;
                  { jjCheckNAddTwoStates(737, 738); }
                  break;
               case 739:
                  if ((0xfc00ffffffffcbffL & l) == 0L)
                     break;
                  if (kind > 69)
                     kind = 69;
                  { jjCheckNAddTwoStates(737, 738); }
                  break;
               case 740:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 69)
                     kind = 69;
                  { jjCheckNAddStates(1722, 1726); }
                  break;
               case 741:
                  if (curChar != 10)
                     break;
                  if (kind > 69)
                     kind = 69;
                  { jjCheckNAddTwoStates(737, 738); }
                  break;
               case 742:
               case 751:
                  if (curChar == 13)
                     { jjCheckNAdd(741); }
                  break;
               case 743:
                  if ((0x100003600L & l) == 0L)
                     break;
                  if (kind > 69)
                     kind = 69;
                  { jjCheckNAddTwoStates(737, 738); }
                  break;
               case 744:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 69)
                     kind = 69;
                  { jjCheckNAddStates(1727, 1734); }
                  break;
               case 745:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 69)
                     kind = 69;
                  { jjCheckNAddStates(1735, 1738); }
                  break;
               case 746:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 69)
                     kind = 69;
                  { jjCheckNAddStates(1739, 1743); }
                  break;
               case 747:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 69)
                     kind = 69;
                  { jjCheckNAddStates(1744, 1749); }
                  break;
               case 748:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 69)
                     kind = 69;
                  { jjCheckNAddStates(1750, 1756); }
                  break;
               case 750:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 69)
                     kind = 69;
                  { jjCheckNAddStates(1757, 1761); }
                  break;
               case 752:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 69)
                     kind = 69;
                  { jjCheckNAddStates(1762, 1769); }
                  break;
               case 753:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 69)
                     kind = 69;
                  { jjCheckNAddStates(1770, 1773); }
                  break;
               case 754:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 69)
                     kind = 69;
                  { jjCheckNAddStates(1774, 1778); }
                  break;
               case 755:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 69)
                     kind = 69;
                  { jjCheckNAddStates(1779, 1784); }
                  break;
               case 756:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 69)
                     kind = 69;
                  { jjCheckNAddStates(1785, 1791); }
                  break;
               case 757:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(757, 758); }
                  break;
               case 758:
                  if (curChar == 37 && kind > 70)
                     kind = 70;
                  break;
               case 759:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 71)
                     kind = 71;
                  { jjCheckNAdd(759); }
                  break;
               case 760:
                  if (curChar == 45)
                     { jjCheckNAddTwoStates(761, 774); }
                  break;
               case 762:
                  if ((0x3ff200000000000L & l) == 0L)
                     break;
                  if (kind > 104)
                     kind = 104;
                  { jjCheckNAddTwoStates(762, 763); }
                  break;
               case 764:
                  if ((0xfc00ffffffffcbffL & l) == 0L)
                     break;
                  if (kind > 104)
                     kind = 104;
                  { jjCheckNAddTwoStates(762, 763); }
                  break;
               case 765:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 104)
                     kind = 104;
                  { jjCheckNAddStates(1792, 1796); }
                  break;
               case 766:
                  if (curChar != 10)
                     break;
                  if (kind > 104)
                     kind = 104;
                  { jjCheckNAddTwoStates(762, 763); }
                  break;
               case 767:
               case 776:
                  if (curChar == 13)
                     { jjCheckNAdd(766); }
                  break;
               case 768:
                  if ((0x100003600L & l) == 0L)
                     break;
                  if (kind > 104)
                     kind = 104;
                  { jjCheckNAddTwoStates(762, 763); }
                  break;
               case 769:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 104)
                     kind = 104;
                  { jjCheckNAddStates(1797, 1804); }
                  break;
               case 770:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 104)
                     kind = 104;
                  { jjCheckNAddStates(1805, 1808); }
                  break;
               case 771:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 104)
                     kind = 104;
                  { jjCheckNAddStates(1809, 1813); }
                  break;
               case 772:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 104)
                     kind = 104;
                  { jjCheckNAddStates(1814, 1819); }
                  break;
               case 773:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 104)
                     kind = 104;
                  { jjCheckNAddStates(1820, 1826); }
                  break;
               case 775:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 104)
                     kind = 104;
                  { jjCheckNAddStates(1827, 1831); }
                  break;
               case 777:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 104)
                     kind = 104;
                  { jjCheckNAddStates(1832, 1839); }
                  break;
               case 778:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 104)
                     kind = 104;
                  { jjCheckNAddStates(1840, 1843); }
                  break;
               case 779:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 104)
                     kind = 104;
                  { jjCheckNAddStates(1844, 1848); }
                  break;
               case 780:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 104)
                     kind = 104;
                  { jjCheckNAddStates(1849, 1854); }
                  break;
               case 781:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 104)
                     kind = 104;
                  { jjCheckNAddStates(1855, 1861); }
                  break;
               case 782:
                  if (curChar == 33)
                     { jjCheckNAddStates(180, 183); }
                  break;
               case 783:
                  if ((0x100003600L & l) != 0L)
                     { jjCheckNAddStates(1862, 1864); }
                  break;
               case 784:
                  if (curChar == 42)
                     { jjCheckNAddTwoStates(785, 786); }
                  break;
               case 785:
                  if ((0xfffffbffffffffffL & l) != 0L)
                     { jjCheckNAddTwoStates(785, 786); }
                  break;
               case 786:
                  if (curChar == 42)
                     { jjCheckNAddStates(1865, 1867); }
                  break;
               case 787:
                  if ((0xffff7bffffffffffL & l) != 0L)
                     { jjCheckNAddTwoStates(788, 789); }
                  break;
               case 788:
                  if ((0xfffffbffffffffffL & l) != 0L)
                     { jjCheckNAddTwoStates(788, 789); }
                  break;
               case 789:
                  if (curChar == 42)
                     { jjCheckNAddStates(1868, 1870); }
                  break;
               case 790:
                  if (curChar == 47)
                     { jjCheckNAddStates(1862, 1864); }
                  break;
               case 791:
                  if (curChar == 47)
                     jjstateSet[jjnewStateCnt++] = 784;
                  break;
               case 801:
                  if ((0x100003600L & l) != 0L)
                     { jjCheckNAddStates(1871, 1873); }
                  break;
               case 802:
                  if (curChar == 42)
                     { jjCheckNAddTwoStates(803, 804); }
                  break;
               case 803:
                  if ((0xfffffbffffffffffL & l) != 0L)
                     { jjCheckNAddTwoStates(803, 804); }
                  break;
               case 804:
                  if (curChar == 42)
                     { jjCheckNAddStates(1874, 1876); }
                  break;
               case 805:
                  if ((0xffff7bffffffffffL & l) != 0L)
                     { jjCheckNAddTwoStates(806, 807); }
                  break;
               case 806:
                  if ((0xfffffbffffffffffL & l) != 0L)
                     { jjCheckNAddTwoStates(806, 807); }
                  break;
               case 807:
                  if (curChar == 42)
                     { jjCheckNAddStates(1877, 1879); }
                  break;
               case 808:
                  if (curChar == 47)
                     { jjCheckNAddStates(1871, 1873); }
                  break;
               case 809:
                  if (curChar == 47)
                     jjstateSet[jjnewStateCnt++] = 802;
                  break;
               case 811:
                  if ((0x280000000000000L & l) != 0L && kind > 73)
                     kind = 73;
                  break;
               case 814:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 71)
                     kind = 71;
                  { jjCheckNAddStates(0, 110); }
                  break;
               case 815:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(815, 623); }
                  break;
               case 816:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(816, 817); }
                  break;
               case 817:
                  if (curChar == 46)
                     { jjCheckNAdd(621); }
                  break;
               case 818:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(818, 626); }
                  break;
               case 819:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(819, 820); }
                  break;
               case 820:
                  if (curChar == 46)
                     { jjCheckNAdd(624); }
                  break;
               case 821:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(821, 629); }
                  break;
               case 822:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(822, 823); }
                  break;
               case 823:
                  if (curChar == 46)
                     { jjCheckNAdd(627); }
                  break;
               case 824:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(824, 632); }
                  break;
               case 825:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(825, 826); }
                  break;
               case 826:
                  if (curChar == 46)
                     { jjCheckNAdd(630); }
                  break;
               case 827:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(827, 635); }
                  break;
               case 828:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(828, 829); }
                  break;
               case 829:
                  if (curChar == 46)
                     { jjCheckNAdd(633); }
                  break;
               case 830:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(830, 638); }
                  break;
               case 831:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(831, 832); }
                  break;
               case 832:
                  if (curChar == 46)
                     { jjCheckNAdd(636); }
                  break;
               case 833:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(833, 643); }
                  break;
               case 834:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(834, 835); }
                  break;
               case 835:
                  if (curChar == 46)
                     { jjCheckNAdd(639); }
                  break;
               case 836:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(836, 648); }
                  break;
               case 837:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(837, 838); }
                  break;
               case 838:
                  if (curChar == 46)
                     { jjCheckNAdd(644); }
                  break;
               case 839:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(839, 651); }
                  break;
               case 840:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(840, 841); }
                  break;
               case 841:
                  if (curChar == 46)
                     { jjCheckNAdd(649); }
                  break;
               case 842:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(842, 653); }
                  break;
               case 843:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(843, 844); }
                  break;
               case 844:
                  if (curChar == 46)
                     { jjCheckNAdd(652); }
                  break;
               case 845:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(845, 655); }
                  break;
               case 846:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(846, 847); }
                  break;
               case 847:
                  if (curChar == 46)
                     { jjCheckNAdd(654); }
                  break;
               case 848:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(848, 658); }
                  break;
               case 849:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(849, 850); }
                  break;
               case 850:
                  if (curChar == 46)
                     { jjCheckNAdd(656); }
                  break;
               case 851:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(851, 661); }
                  break;
               case 852:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(852, 853); }
                  break;
               case 853:
                  if (curChar == 46)
                     { jjCheckNAdd(659); }
                  break;
               case 854:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(854, 664); }
                  break;
               case 855:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(855, 856); }
                  break;
               case 856:
                  if (curChar == 46)
                     { jjCheckNAdd(662); }
                  break;
               case 857:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(857, 667); }
                  break;
               case 858:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(858, 859); }
                  break;
               case 859:
                  if (curChar == 46)
                     { jjCheckNAdd(665); }
                  break;
               case 860:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(860, 670); }
                  break;
               case 861:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(861, 862); }
                  break;
               case 862:
                  if (curChar == 46)
                     { jjCheckNAdd(668); }
                  break;
               case 863:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1880, 1884); }
                  break;
               case 864:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(864, 865); }
                  break;
               case 865:
                  if (curChar == 46)
                     { jjCheckNAdd(671); }
                  break;
               case 866:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(866, 687); }
                  break;
               case 867:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(867, 868); }
                  break;
               case 868:
                  if (curChar == 46)
                     { jjCheckNAdd(685); }
                  break;
               case 869:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(869, 690); }
                  break;
               case 870:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(870, 871); }
                  break;
               case 871:
                  if (curChar == 46)
                     { jjCheckNAdd(688); }
                  break;
               case 872:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1885, 1887); }
                  break;
               case 873:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(873, 874); }
                  break;
               case 874:
                  if (curChar == 46)
                     { jjCheckNAdd(691); }
                  break;
               case 875:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1888, 1890); }
                  break;
               case 876:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(876, 877); }
                  break;
               case 877:
                  if (curChar == 46)
                     { jjCheckNAdd(695); }
                  break;
               case 878:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1891, 1893); }
                  break;
               case 879:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(879, 880); }
                  break;
               case 880:
                  if (curChar == 46)
                     { jjCheckNAdd(700); }
                  break;
               case 881:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1894, 1896); }
                  break;
               case 882:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(882, 883); }
                  break;
               case 883:
                  if (curChar == 46)
                     { jjCheckNAdd(711); }
                  break;
               case 884:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1897, 1899); }
                  break;
               case 885:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(885, 886); }
                  break;
               case 886:
                  if (curChar == 46)
                     { jjCheckNAdd(735); }
                  break;
               case 887:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(887, 758); }
                  break;
               case 888:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(888, 889); }
                  break;
               case 889:
                  if (curChar == 46)
                     { jjCheckNAdd(757); }
                  break;
               case 890:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 71)
                     kind = 71;
                  { jjCheckNAdd(890); }
                  break;
               case 891:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(891, 892); }
                  break;
               case 892:
                  if (curChar == 46)
                     { jjCheckNAdd(759); }
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else if (curChar < 128)
      {
         long l = 1L << (curChar & 077);
         do
         {
            switch(jjstateSet[--i])
            {
               case 7:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 38)
                        kind = 38;
                     { jjCheckNAddStates(1900, 1904); }
                  }
                  else if ((0x1000000100000000L & l) != 0L)
                  {
                     if (kind > 113)
                        kind = 113;
                  }
                  else if (curChar == 92)
                     { jjCheckNAddStates(1905, 1908); }
                  else if (curChar == 126)
                  {
                     if (kind > 31)
                        kind = 31;
                     { jjCheckNAdd(297); }
                  }
                  else if (curChar == 64)
                     { jjAddStates(1909, 1911); }
                  else if (curChar == 123)
                  {
                     if (kind > 26)
                        kind = 26;
                  }
                  if ((0x20000000200000L & l) != 0L)
                     { jjAddStates(1912, 1914); }
                  else if ((0x800000008L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 75;
                  else if ((0x1000000010000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 47;
                  break;
               case 1:
                  { jjAddStates(1915, 1916); }
                  break;
               case 3:
               case 4:
                  { jjCheckNAddTwoStates(4, 5); }
                  break;
               case 8:
                  if (curChar == 123 && kind > 26)
                     kind = 26;
                  break;
               case 13:
                  if ((0x7fffffe07fffffeL & l) != 0L)
                     { jjCheckNAddTwoStates(13, 14); }
                  break;
               case 14:
                  { jjCheckNAddTwoStates(14, 15); }
                  break;
               case 16:
                  if ((0x10000000100000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 12;
                  break;
               case 17:
                  if ((0x4000000040L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 16;
                  break;
               case 18:
                  if ((0x800000008000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 17;
                  break;
               case 19:
                  if ((0x8000000080000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 18;
                  break;
               case 20:
                  if ((0x800000008000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 19;
                  break;
               case 21:
                  if ((0x4000000040000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 20;
                  break;
               case 22:
                  if ((0x800000008L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 21;
                  break;
               case 23:
                  if ((0x20000000200L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 22;
                  break;
               case 24:
                  if ((0x200000002000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 23;
                  break;
               case 26:
                  if ((0x200000002000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 25;
                  break;
               case 27:
                  if ((0x4000000040000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 26;
                  break;
               case 28:
                  if ((0x800000008000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 27;
                  break;
               case 29:
                  if ((0x4000000040L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 28;
                  break;
               case 30:
                  if ((0x8000000080000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 29;
                  break;
               case 31:
                  if ((0x400000004000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 30;
                  break;
               case 32:
                  if ((0x200000002L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 31;
                  break;
               case 33:
                  if ((0x4000000040000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 32;
                  break;
               case 34:
                  if ((0x10000000100000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 33;
                  break;
               case 35:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 34;
                  break;
               case 36:
                  if ((0x8000000080L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 35;
                  break;
               case 37:
                  if ((0x200000002L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 36;
                  break;
               case 38:
                  if ((0x200000002000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 37;
                  break;
               case 39:
                  if ((0x20000000200L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 38;
                  break;
               case 40:
                  if ((0x100000001000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 39;
                  break;
               case 41:
                  if ((0x1000000010L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 40;
                  break;
               case 43:
                  if ((0x1000000010L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 42;
                  break;
               case 44:
                  if ((0x20000000200L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 43;
                  break;
               case 45:
                  if ((0x8000000080L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 44;
                  break;
               case 46:
                  if ((0x800000008000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 45;
                  break;
               case 47:
                  if ((0x4000000040000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 46;
                  break;
               case 48:
                  if ((0x1000000010000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 47;
                  break;
               case 49:
                  if (curChar == 64)
                     { jjAddStates(1909, 1911); }
                  break;
               case 51:
               case 52:
                  if ((0x7fffffe87fffffeL & l) == 0L)
                     break;
                  if (kind > 93)
                     kind = 93;
                  { jjCheckNAddTwoStates(52, 53); }
                  break;
               case 53:
                  if (curChar == 92)
                     { jjCheckNAddTwoStates(54, 55); }
                  break;
               case 54:
                  if ((0xffffff81ffffff81L & l) == 0L)
                     break;
                  if (kind > 93)
                     kind = 93;
                  { jjCheckNAddTwoStates(52, 53); }
                  break;
               case 55:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 93)
                     kind = 93;
                  { jjCheckNAddStates(201, 205); }
                  break;
               case 59:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 93)
                     kind = 93;
                  { jjCheckNAddStates(206, 213); }
                  break;
               case 60:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 93)
                     kind = 93;
                  { jjCheckNAddStates(214, 217); }
                  break;
               case 61:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 93)
                     kind = 93;
                  { jjCheckNAddStates(218, 222); }
                  break;
               case 62:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 93)
                     kind = 93;
                  { jjCheckNAddStates(223, 228); }
                  break;
               case 63:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 93)
                     kind = 93;
                  { jjCheckNAddStates(229, 235); }
                  break;
               case 64:
                  if (curChar == 92)
                     { jjCheckNAddTwoStates(54, 65); }
                  break;
               case 65:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 93)
                     kind = 93;
                  { jjCheckNAddStates(236, 240); }
                  break;
               case 67:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 93)
                     kind = 93;
                  { jjCheckNAddStates(241, 248); }
                  break;
               case 68:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 93)
                     kind = 93;
                  { jjCheckNAddStates(249, 252); }
                  break;
               case 69:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 93)
                     kind = 93;
                  { jjCheckNAddStates(253, 257); }
                  break;
               case 70:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 93)
                     kind = 93;
                  { jjCheckNAddStates(258, 263); }
                  break;
               case 71:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 93)
                     kind = 93;
                  { jjCheckNAddStates(264, 270); }
                  break;
               case 73:
               case 258:
               case 266:
                  if ((0x800000008L & l) != 0L)
                     { jjCheckNAdd(72); }
                  break;
               case 74:
                  if ((0x100000001000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 73;
                  break;
               case 75:
                  if ((0x200000002L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 74;
                  break;
               case 76:
                  if ((0x800000008L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 75;
                  break;
               case 78:
                  if ((0x2000000020L & l) != 0L)
                     { jjAddStates(1917, 1920); }
                  break;
               case 81:
                  { jjAddStates(1921, 1922); }
                  break;
               case 83:
               case 84:
                  { jjCheckNAddTwoStates(84, 85); }
                  break;
               case 89:
               case 90:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     { jjCheckNAddStates(282, 287); }
                  break;
               case 93:
                  { jjAddStates(1923, 1924); }
                  break;
               case 95:
               case 96:
                  { jjCheckNAddTwoStates(96, 97); }
                  break;
               case 101:
               case 102:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     { jjCheckNAddStates(300, 302); }
                  break;
               case 105:
               case 106:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     { jjCheckNAddStates(308, 313); }
                  break;
               case 109:
                  { jjAddStates(1925, 1926); }
                  break;
               case 111:
               case 112:
                  { jjCheckNAddTwoStates(112, 113); }
                  break;
               case 117:
                  if (curChar == 92)
                     { jjCheckNAddTwoStates(118, 129); }
                  break;
               case 118:
                  if ((0xffffff81ffffff81L & l) != 0L)
                     { jjCheckNAddStates(300, 302); }
                  break;
               case 119:
                  if (curChar == 92)
                     { jjCheckNAddTwoStates(118, 120); }
                  break;
               case 120:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(326, 331); }
                  break;
               case 124:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(332, 340); }
                  break;
               case 125:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(341, 345); }
                  break;
               case 126:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(346, 351); }
                  break;
               case 127:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(352, 358); }
                  break;
               case 128:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(359, 366); }
                  break;
               case 129:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(367, 372); }
                  break;
               case 131:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(373, 381); }
                  break;
               case 132:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(382, 386); }
                  break;
               case 133:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(387, 392); }
                  break;
               case 134:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(393, 399); }
                  break;
               case 135:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(400, 407); }
                  break;
               case 136:
                  if (curChar == 92)
                     { jjCheckNAddStates(1927, 1930); }
                  break;
               case 137:
                  if ((0xffffff81ffffff81L & l) != 0L)
                     { jjCheckNAddStates(308, 313); }
                  break;
               case 138:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(408, 415); }
                  break;
               case 142:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(425, 435); }
                  break;
               case 143:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(436, 442); }
                  break;
               case 144:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(443, 450); }
                  break;
               case 145:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(451, 459); }
                  break;
               case 146:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(460, 469); }
                  break;
               case 147:
                  if (curChar == 92)
                     { jjCheckNAddTwoStates(137, 148); }
                  break;
               case 148:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(470, 477); }
                  break;
               case 150:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(478, 488); }
                  break;
               case 151:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(489, 495); }
                  break;
               case 152:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(496, 503); }
                  break;
               case 153:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(504, 512); }
                  break;
               case 154:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(513, 522); }
                  break;
               case 156:
                  if ((0xffffffffefffffffL & l) != 0L)
                     { jjCheckNAddStates(523, 525); }
                  break;
               case 158:
                  if (curChar == 92)
                     { jjAddStates(1931, 1934); }
                  break;
               case 162:
                  if ((0xffffff81ffffff81L & l) != 0L)
                     { jjCheckNAddStates(523, 525); }
                  break;
               case 163:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(531, 536); }
                  break;
               case 166:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(537, 545); }
                  break;
               case 167:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(546, 550); }
                  break;
               case 168:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(551, 556); }
                  break;
               case 169:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(557, 563); }
                  break;
               case 170:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(564, 571); }
                  break;
               case 172:
                  if ((0xffffffffefffffffL & l) != 0L)
                     { jjCheckNAddStates(572, 574); }
                  break;
               case 174:
                  if (curChar == 92)
                     { jjAddStates(1935, 1938); }
                  break;
               case 178:
                  if ((0xffffff81ffffff81L & l) != 0L)
                     { jjCheckNAddStates(572, 574); }
                  break;
               case 179:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(575, 580); }
                  break;
               case 182:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(581, 589); }
                  break;
               case 183:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(590, 594); }
                  break;
               case 184:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(595, 600); }
                  break;
               case 185:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(601, 607); }
                  break;
               case 186:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(608, 615); }
                  break;
               case 187:
                  if (curChar == 92)
                     { jjCheckNAddStates(1939, 1942); }
                  break;
               case 188:
                  if ((0xffffff81ffffff81L & l) != 0L)
                     { jjCheckNAddStates(282, 287); }
                  break;
               case 189:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(616, 623); }
                  break;
               case 193:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(633, 643); }
                  break;
               case 194:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(644, 650); }
                  break;
               case 195:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(651, 658); }
                  break;
               case 196:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(659, 667); }
                  break;
               case 197:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(668, 677); }
                  break;
               case 198:
                  if (curChar == 92)
                     { jjCheckNAddTwoStates(188, 199); }
                  break;
               case 199:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(678, 685); }
                  break;
               case 201:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(686, 696); }
                  break;
               case 202:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(697, 703); }
                  break;
               case 203:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(704, 711); }
                  break;
               case 204:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(712, 720); }
                  break;
               case 205:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(721, 730); }
                  break;
               case 206:
                  if ((0x1000000010000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 78;
                  break;
               case 207:
                  if ((0x200000002000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 206;
                  break;
               case 208:
                  if ((0x10000000100000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 207;
                  break;
               case 209:
                  if ((0x800000008L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 208;
                  break;
               case 210:
                  if ((0x800000008000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 209;
                  break;
               case 211:
                  if ((0x1000000010L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 210;
                  break;
               case 216:
                  { jjAddStates(1943, 1944); }
                  break;
               case 218:
               case 219:
                  { jjCheckNAddTwoStates(219, 220); }
                  break;
               case 224:
               case 225:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     { jjCheckNAddStates(746, 749); }
                  break;
               case 228:
                  { jjAddStates(1945, 1946); }
                  break;
               case 230:
               case 231:
                  { jjCheckNAddTwoStates(231, 232); }
                  break;
               case 236:
                  if (curChar == 92)
                     { jjCheckNAddTwoStates(237, 238); }
                  break;
               case 237:
                  if ((0xffffff81ffffff81L & l) != 0L)
                     { jjCheckNAddStates(746, 749); }
                  break;
               case 238:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(759, 764); }
                  break;
               case 242:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(771, 779); }
                  break;
               case 243:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(780, 784); }
                  break;
               case 244:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(785, 790); }
                  break;
               case 245:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(791, 797); }
                  break;
               case 246:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(798, 805); }
                  break;
               case 247:
                  if (curChar == 92)
                     { jjCheckNAddTwoStates(237, 248); }
                  break;
               case 248:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(806, 811); }
                  break;
               case 250:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(812, 820); }
                  break;
               case 251:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(821, 825); }
                  break;
               case 252:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(826, 831); }
                  break;
               case 253:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(832, 838); }
                  break;
               case 254:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(839, 846); }
                  break;
               case 256:
                  if ((0x1000000100000000L & l) != 0L && kind > 113)
                     kind = 113;
                  break;
               case 259:
                  if ((0x100000001000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 258;
                  break;
               case 260:
                  if ((0x200000002L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 259;
                  break;
               case 261:
                  if ((0x800000008L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 260;
                  break;
               case 263:
                  if ((0x400000004000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 262;
                  break;
               case 264:
                  if ((0x800000008000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 263;
                  break;
               case 265:
                  if ((0x200000002000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 264;
                  break;
               case 267:
                  if ((0x100000001000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 266;
                  break;
               case 268:
                  if ((0x200000002L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 267;
                  break;
               case 269:
                  if ((0x800000008L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 268;
                  break;
               case 271:
                  if ((0x10000000100000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 270;
                  break;
               case 272:
                  if ((0x20000000200L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 271;
                  break;
               case 273:
                  if ((0x80000000800L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 272;
                  break;
               case 274:
                  if ((0x400000004L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 273;
                  break;
               case 275:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 274;
                  break;
               case 276:
                  if ((0x80000000800000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 275;
                  break;
               case 279:
                  { jjAddStates(1947, 1948); }
                  break;
               case 281:
               case 282:
                  { jjCheckNAddTwoStates(282, 283); }
                  break;
               case 288:
                  { jjAddStates(1949, 1950); }
                  break;
               case 290:
               case 291:
                  { jjCheckNAddTwoStates(291, 292); }
                  break;
               case 296:
                  if (curChar == 126)
                     { jjCheckNAdd(297); }
                  break;
               case 299:
                  { jjAddStates(1951, 1952); }
                  break;
               case 301:
               case 302:
                  { jjCheckNAddTwoStates(302, 303); }
                  break;
               case 308:
                  { jjAddStates(1953, 1954); }
                  break;
               case 310:
               case 311:
                  { jjCheckNAddTwoStates(311, 312); }
                  break;
               case 317:
                  { jjAddStates(1955, 1956); }
                  break;
               case 319:
               case 320:
                  { jjCheckNAddTwoStates(320, 321); }
                  break;
               case 326:
                  { jjAddStates(1957, 1958); }
                  break;
               case 328:
               case 329:
                  { jjCheckNAddTwoStates(329, 330); }
                  break;
               case 335:
                  { jjAddStates(1959, 1960); }
                  break;
               case 337:
               case 338:
                  { jjCheckNAddTwoStates(338, 339); }
                  break;
               case 343:
                  if (curChar == 126 && kind > 31)
                     kind = 31;
                  break;
               case 344:
                  if (curChar != 126)
                     break;
                  if (kind > 31)
                     kind = 31;
                  { jjCheckNAdd(297); }
                  break;
               case 346:
                  if ((0xffffffffefffffffL & l) != 0L)
                     { jjCheckNAddStates(907, 909); }
                  break;
               case 348:
                  if (curChar == 92)
                     { jjAddStates(1961, 1964); }
                  break;
               case 352:
                  if ((0xffffff81ffffff81L & l) != 0L)
                     { jjCheckNAddStates(907, 909); }
                  break;
               case 353:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(910, 915); }
                  break;
               case 356:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(916, 924); }
                  break;
               case 357:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(925, 929); }
                  break;
               case 358:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(930, 935); }
                  break;
               case 359:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(936, 942); }
                  break;
               case 360:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(943, 950); }
                  break;
               case 361:
                  if ((0xffffffffefffffffL & l) == 0L)
                     break;
                  if (kind > 37)
                     kind = 37;
                  { jjCheckNAddTwoStates(361, 362); }
                  break;
               case 362:
                  if (curChar == 92)
                     { jjAddStates(1965, 1968); }
                  break;
               case 366:
                  if ((0xffffff81ffffff81L & l) == 0L)
                     break;
                  if (kind > 37)
                     kind = 37;
                  { jjCheckNAddTwoStates(361, 362); }
                  break;
               case 367:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 37)
                     kind = 37;
                  { jjCheckNAddStates(951, 955); }
                  break;
               case 370:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 37)
                     kind = 37;
                  { jjCheckNAddStates(956, 963); }
                  break;
               case 371:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 37)
                     kind = 37;
                  { jjCheckNAddStates(964, 967); }
                  break;
               case 372:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 37)
                     kind = 37;
                  { jjCheckNAddStates(968, 972); }
                  break;
               case 373:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 37)
                     kind = 37;
                  { jjCheckNAddStates(973, 978); }
                  break;
               case 374:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 37)
                     kind = 37;
                  { jjCheckNAddStates(979, 985); }
                  break;
               case 376:
                  if ((0xffffffffefffffffL & l) != 0L)
                     { jjCheckNAddStates(986, 988); }
                  break;
               case 378:
                  if (curChar == 92)
                     { jjAddStates(1969, 1972); }
                  break;
               case 382:
                  if ((0xffffff81ffffff81L & l) != 0L)
                     { jjCheckNAddStates(986, 988); }
                  break;
               case 383:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(989, 994); }
                  break;
               case 386:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(995, 1003); }
                  break;
               case 387:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(1004, 1008); }
                  break;
               case 388:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(1009, 1014); }
                  break;
               case 389:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(1015, 1021); }
                  break;
               case 390:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(1022, 1029); }
                  break;
               case 391:
                  if ((0xffffffffefffffffL & l) == 0L)
                     break;
                  if (kind > 37)
                     kind = 37;
                  { jjCheckNAddTwoStates(391, 392); }
                  break;
               case 392:
                  if (curChar == 92)
                     { jjAddStates(1973, 1976); }
                  break;
               case 396:
                  if ((0xffffff81ffffff81L & l) == 0L)
                     break;
                  if (kind > 37)
                     kind = 37;
                  { jjCheckNAddTwoStates(391, 392); }
                  break;
               case 397:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 37)
                     kind = 37;
                  { jjCheckNAddStates(1030, 1034); }
                  break;
               case 400:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 37)
                     kind = 37;
                  { jjCheckNAddStates(1035, 1042); }
                  break;
               case 401:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 37)
                     kind = 37;
                  { jjCheckNAddStates(1043, 1046); }
                  break;
               case 402:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 37)
                     kind = 37;
                  { jjCheckNAddStates(1047, 1051); }
                  break;
               case 403:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 37)
                     kind = 37;
                  { jjCheckNAddStates(1052, 1057); }
                  break;
               case 404:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 37)
                     kind = 37;
                  { jjCheckNAddStates(1058, 1064); }
                  break;
               case 406:
               case 407:
                  if ((0x7fffffe87fffffeL & l) == 0L)
                     break;
                  if (kind > 38)
                     kind = 38;
                  { jjCheckNAddTwoStates(407, 408); }
                  break;
               case 408:
                  if (curChar == 92)
                     { jjCheckNAddTwoStates(409, 410); }
                  break;
               case 409:
                  if ((0xffffff81ffffff81L & l) == 0L)
                     break;
                  if (kind > 38)
                     kind = 38;
                  { jjCheckNAddTwoStates(407, 408); }
                  break;
               case 410:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 38)
                     kind = 38;
                  { jjCheckNAddStates(1065, 1069); }
                  break;
               case 414:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 38)
                     kind = 38;
                  { jjCheckNAddStates(1070, 1077); }
                  break;
               case 415:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 38)
                     kind = 38;
                  { jjCheckNAddStates(1078, 1081); }
                  break;
               case 416:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 38)
                     kind = 38;
                  { jjCheckNAddStates(1082, 1086); }
                  break;
               case 417:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 38)
                     kind = 38;
                  { jjCheckNAddStates(1087, 1092); }
                  break;
               case 418:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 38)
                     kind = 38;
                  { jjCheckNAddStates(1093, 1099); }
                  break;
               case 420:
               case 421:
                  if ((0x7fffffe87fffffeL & l) == 0L)
                     break;
                  if (kind > 42)
                     kind = 42;
                  { jjCheckNAddTwoStates(421, 422); }
                  break;
               case 422:
                  if (curChar == 92)
                     { jjCheckNAddTwoStates(423, 424); }
                  break;
               case 423:
                  if ((0xffffff81ffffff81L & l) == 0L)
                     break;
                  if (kind > 42)
                     kind = 42;
                  { jjCheckNAddTwoStates(421, 422); }
                  break;
               case 424:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 42)
                     kind = 42;
                  { jjCheckNAddStates(1102, 1106); }
                  break;
               case 428:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 42)
                     kind = 42;
                  { jjCheckNAddStates(1107, 1114); }
                  break;
               case 429:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 42)
                     kind = 42;
                  { jjCheckNAddStates(1115, 1118); }
                  break;
               case 430:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 42)
                     kind = 42;
                  { jjCheckNAddStates(1119, 1123); }
                  break;
               case 431:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 42)
                     kind = 42;
                  { jjCheckNAddStates(1124, 1129); }
                  break;
               case 432:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 42)
                     kind = 42;
                  { jjCheckNAddStates(1130, 1136); }
                  break;
               case 433:
                  if (curChar == 92)
                     { jjCheckNAddTwoStates(423, 434); }
                  break;
               case 434:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 42)
                     kind = 42;
                  { jjCheckNAddStates(1137, 1141); }
                  break;
               case 436:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 42)
                     kind = 42;
                  { jjCheckNAddStates(1142, 1149); }
                  break;
               case 437:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 42)
                     kind = 42;
                  { jjCheckNAddStates(1150, 1153); }
                  break;
               case 438:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 42)
                     kind = 42;
                  { jjCheckNAddStates(1154, 1158); }
                  break;
               case 439:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 42)
                     kind = 42;
                  { jjCheckNAddStates(1159, 1164); }
                  break;
               case 440:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 42)
                     kind = 42;
                  { jjCheckNAddStates(1165, 1171); }
                  break;
               case 441:
               case 442:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     { jjCheckNAddStates(1172, 1174); }
                  break;
               case 444:
                  if (curChar == 92)
                     { jjCheckNAddTwoStates(445, 446); }
                  break;
               case 445:
                  if ((0xffffff81ffffff81L & l) != 0L)
                     { jjCheckNAddStates(1172, 1174); }
                  break;
               case 446:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(1175, 1180); }
                  break;
               case 450:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(1181, 1189); }
                  break;
               case 451:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(1190, 1194); }
                  break;
               case 452:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(1195, 1200); }
                  break;
               case 453:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(1201, 1207); }
                  break;
               case 454:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(1208, 1215); }
                  break;
               case 455:
                  if (curChar == 92)
                     { jjCheckNAddTwoStates(445, 456); }
                  break;
               case 456:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(1216, 1221); }
                  break;
               case 458:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(1222, 1230); }
                  break;
               case 459:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(1231, 1235); }
                  break;
               case 460:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(1236, 1241); }
                  break;
               case 461:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(1242, 1248); }
                  break;
               case 462:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(1249, 1256); }
                  break;
               case 463:
                  if (curChar == 92)
                     { jjCheckNAddTwoStates(409, 464); }
                  break;
               case 464:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 38)
                     kind = 38;
                  { jjCheckNAddStates(1257, 1261); }
                  break;
               case 466:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 38)
                     kind = 38;
                  { jjCheckNAddStates(1262, 1269); }
                  break;
               case 467:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 38)
                     kind = 38;
                  { jjCheckNAddStates(1270, 1273); }
                  break;
               case 468:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 38)
                     kind = 38;
                  { jjCheckNAddStates(1274, 1278); }
                  break;
               case 469:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 38)
                     kind = 38;
                  { jjCheckNAddStates(1279, 1284); }
                  break;
               case 470:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 38)
                     kind = 38;
                  { jjCheckNAddStates(1285, 1291); }
                  break;
               case 471:
                  if ((0x7fffffe87fffffeL & l) == 0L)
                     break;
                  if (kind > 38)
                     kind = 38;
                  { jjCheckNAddStates(1900, 1904); }
                  break;
               case 474:
               case 475:
                  if ((0x7fffffe87fffffeL & l) == 0L)
                     break;
                  if (kind > 39)
                     kind = 39;
                  { jjCheckNAddTwoStates(475, 476); }
                  break;
               case 476:
                  if (curChar == 92)
                     { jjCheckNAddTwoStates(477, 478); }
                  break;
               case 477:
                  if ((0xffffff81ffffff81L & l) == 0L)
                     break;
                  if (kind > 39)
                     kind = 39;
                  { jjCheckNAddTwoStates(475, 476); }
                  break;
               case 478:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 39)
                     kind = 39;
                  { jjCheckNAddStates(1292, 1296); }
                  break;
               case 482:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 39)
                     kind = 39;
                  { jjCheckNAddStates(1297, 1304); }
                  break;
               case 483:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 39)
                     kind = 39;
                  { jjCheckNAddStates(1305, 1308); }
                  break;
               case 484:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 39)
                     kind = 39;
                  { jjCheckNAddStates(1309, 1313); }
                  break;
               case 485:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 39)
                     kind = 39;
                  { jjCheckNAddStates(1314, 1319); }
                  break;
               case 486:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 39)
                     kind = 39;
                  { jjCheckNAddStates(1320, 1326); }
                  break;
               case 487:
                  if (curChar == 92)
                     { jjCheckNAddTwoStates(477, 488); }
                  break;
               case 488:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 39)
                     kind = 39;
                  { jjCheckNAddStates(1327, 1331); }
                  break;
               case 490:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 39)
                     kind = 39;
                  { jjCheckNAddStates(1332, 1339); }
                  break;
               case 491:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 39)
                     kind = 39;
                  { jjCheckNAddStates(1340, 1343); }
                  break;
               case 492:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 39)
                     kind = 39;
                  { jjCheckNAddStates(1344, 1348); }
                  break;
               case 493:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 39)
                     kind = 39;
                  { jjCheckNAddStates(1349, 1354); }
                  break;
               case 494:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 39)
                     kind = 39;
                  { jjCheckNAddStates(1355, 1361); }
                  break;
               case 495:
                  if ((0x7fffffe87fffffeL & l) == 0L)
                     break;
                  if (kind > 40)
                     kind = 40;
                  { jjCheckNAddTwoStates(495, 496); }
                  break;
               case 496:
                  if (curChar == 92)
                     { jjAddStates(1977, 1978); }
                  break;
               case 497:
                  if ((0xffffff81ffffff81L & l) == 0L)
                     break;
                  if (kind > 40)
                     kind = 40;
                  { jjCheckNAddTwoStates(495, 496); }
                  break;
               case 498:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 40)
                     kind = 40;
                  { jjCheckNAddStates(1362, 1366); }
                  break;
               case 502:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 40)
                     kind = 40;
                  { jjCheckNAddStates(1367, 1374); }
                  break;
               case 503:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 40)
                     kind = 40;
                  { jjCheckNAddStates(1375, 1378); }
                  break;
               case 504:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 40)
                     kind = 40;
                  { jjCheckNAddStates(1379, 1383); }
                  break;
               case 505:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 40)
                     kind = 40;
                  { jjCheckNAddStates(1384, 1389); }
                  break;
               case 506:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 40)
                     kind = 40;
                  { jjCheckNAddStates(1390, 1396); }
                  break;
               case 507:
                  if ((0x20000000200000L & l) != 0L)
                     { jjAddStates(1912, 1914); }
                  break;
               case 510:
                  if ((0xffffffffefffffffL & l) != 0L)
                     { jjCheckNAddStates(1403, 1405); }
                  break;
               case 514:
                  { jjAddStates(1979, 1980); }
                  break;
               case 516:
               case 517:
                  { jjCheckNAddTwoStates(517, 518); }
                  break;
               case 522:
                  if (curChar == 92)
                     { jjAddStates(1981, 1984); }
                  break;
               case 526:
                  if ((0xffffff81ffffff81L & l) != 0L)
                     { jjCheckNAddStates(1403, 1405); }
                  break;
               case 527:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(1415, 1420); }
                  break;
               case 530:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(1421, 1429); }
                  break;
               case 531:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(1430, 1434); }
                  break;
               case 532:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(1435, 1440); }
                  break;
               case 533:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(1441, 1447); }
                  break;
               case 534:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(1448, 1455); }
                  break;
               case 536:
                  if ((0xffffffffefffffffL & l) != 0L)
                     { jjCheckNAddStates(1456, 1458); }
                  break;
               case 538:
                  if (curChar == 92)
                     { jjAddStates(1985, 1988); }
                  break;
               case 542:
                  if ((0xffffff81ffffff81L & l) != 0L)
                     { jjCheckNAddStates(1456, 1458); }
                  break;
               case 543:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(1459, 1464); }
                  break;
               case 546:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(1465, 1473); }
                  break;
               case 547:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(1474, 1478); }
                  break;
               case 548:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(1479, 1484); }
                  break;
               case 549:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(1485, 1491); }
                  break;
               case 550:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(1492, 1499); }
                  break;
               case 551:
                  if ((0x7fffffffefffffffL & l) != 0L)
                     { jjCheckNAddStates(1500, 1503); }
                  break;
               case 552:
                  if (curChar == 92)
                     { jjAddStates(1989, 1990); }
                  break;
               case 553:
                  if ((0xffffff81ffffff81L & l) != 0L)
                     { jjCheckNAddStates(1500, 1503); }
                  break;
               case 554:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(1504, 1509); }
                  break;
               case 558:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(1516, 1524); }
                  break;
               case 559:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(1525, 1529); }
                  break;
               case 560:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(1530, 1535); }
                  break;
               case 561:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(1536, 1542); }
                  break;
               case 562:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(1543, 1550); }
                  break;
               case 565:
                  { jjAddStates(1991, 1992); }
                  break;
               case 567:
               case 568:
                  { jjCheckNAddTwoStates(568, 569); }
                  break;
               case 572:
                  if ((0x100000001000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 508;
                  break;
               case 573:
                  if ((0x4000000040000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 572;
                  break;
               case 581:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 103)
                     kind = 103;
                  { jjAddStates(1582, 1587); }
                  break;
               case 582:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 583;
                  break;
               case 583:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 584;
                  break;
               case 584:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 585;
                  break;
               case 585:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAdd(586); }
                  break;
               case 586:
                  if ((0x7e0000007eL & l) != 0L && kind > 103)
                     kind = 103;
                  break;
               case 587:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 588;
                  break;
               case 588:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 589;
                  break;
               case 589:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 590;
                  break;
               case 590:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 103)
                     kind = 103;
                  jjstateSet[jjnewStateCnt++] = 577;
                  break;
               case 591:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 592;
                  break;
               case 592:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 593;
                  break;
               case 593:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 103)
                     kind = 103;
                  jjstateSet[jjnewStateCnt++] = 594;
                  break;
               case 595:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 596;
                  break;
               case 596:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 103)
                     kind = 103;
                  jjstateSet[jjnewStateCnt++] = 597;
                  break;
               case 599:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 103)
                     kind = 103;
                  jjstateSet[jjnewStateCnt++] = 600;
                  break;
               case 608:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddTwoStates(609, 615); }
                  break;
               case 610:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 103)
                     kind = 103;
                  jjstateSet[jjnewStateCnt++] = 611;
                  break;
               case 611:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 103)
                     kind = 103;
                  { jjCheckNAddStates(1598, 1601); }
                  break;
               case 612:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 103)
                     kind = 103;
                  { jjCheckNAdd(586); }
                  break;
               case 613:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 103)
                     kind = 103;
                  { jjCheckNAddTwoStates(586, 612); }
                  break;
               case 614:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 103)
                     kind = 103;
                  { jjCheckNAddStates(1602, 1604); }
                  break;
               case 615:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(1605, 1609); }
                  break;
               case 616:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAdd(609); }
                  break;
               case 617:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddTwoStates(616, 609); }
                  break;
               case 618:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(1610, 1612); }
                  break;
               case 619:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(1613, 1616); }
                  break;
               case 622:
                  if ((0x200000002000L & l) != 0L && kind > 58)
                     kind = 58;
                  break;
               case 623:
               case 631:
                  if ((0x2000000020L & l) != 0L)
                     { jjCheckNAdd(622); }
                  break;
               case 625:
                  if ((0x100000001000000L & l) != 0L && kind > 58)
                     kind = 58;
                  break;
               case 626:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 625;
                  break;
               case 628:
                  if ((0x10000000100L & l) != 0L && kind > 58)
                     kind = 58;
                  break;
               case 629:
                  if ((0x800000008L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 628;
                  break;
               case 632:
                  if ((0x4000000040000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 631;
                  break;
               case 634:
                  if ((0x80000000800000L & l) != 0L && kind > 59)
                     kind = 59;
                  break;
               case 635:
                  if ((0x40000000400000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 634;
                  break;
               case 637:
                  if ((0x10000000100L & l) != 0L && kind > 59)
                     kind = 59;
                  break;
               case 638:
                  if ((0x40000000400000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 637;
                  break;
               case 640:
                  if ((0x400000004000L & l) != 0L && kind > 59)
                     kind = 59;
                  break;
               case 641:
                  if ((0x20000000200L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 640;
                  break;
               case 642:
                  if ((0x200000002000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 641;
                  break;
               case 643:
                  if ((0x40000000400000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 642;
                  break;
               case 645:
                  if ((0x100000001000000L & l) != 0L && kind > 59)
                     kind = 59;
                  break;
               case 646:
                  if ((0x200000002L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 645;
                  break;
               case 647:
                  if ((0x200000002000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 646;
                  break;
               case 648:
                  if ((0x40000000400000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 647;
                  break;
               case 650:
                  if ((0x200000002000L & l) != 0L && kind > 60)
                     kind = 60;
                  break;
               case 651:
                  if ((0x800000008L & l) != 0L)
                     { jjCheckNAdd(650); }
                  break;
               case 653:
                  if ((0x200000002000L & l) != 0L)
                     { jjCheckNAdd(650); }
                  break;
               case 655:
                  if ((0x2000000020000L & l) != 0L && kind > 60)
                     kind = 60;
                  break;
               case 657:
                  if ((0x400000004000L & l) != 0L && kind > 60)
                     kind = 60;
                  break;
               case 658:
                  if ((0x20000000200L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 657;
                  break;
               case 660:
                  if ((0x10000000100000L & l) != 0L && kind > 60)
                     kind = 60;
                  break;
               case 661:
                  if ((0x1000000010000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 660;
                  break;
               case 663:
                  if ((0x800000008L & l) != 0L && kind > 60)
                     kind = 60;
                  break;
               case 664:
                  if ((0x1000000010000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 663;
                  break;
               case 666:
                  if ((0x100000001000000L & l) != 0L && kind > 60)
                     kind = 60;
                  break;
               case 667:
                  if ((0x1000000010000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 666;
                  break;
               case 669:
                  if ((0x4000000040000L & l) != 0L && kind > 61)
                     kind = 61;
                  break;
               case 670:
                  if ((0x4000000040L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 669;
                  break;
               case 672:
                  if ((0x8000000080L & l) != 0L && kind > 62)
                     kind = 62;
                  break;
               case 673:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 672;
                  break;
               case 674:
                  if ((0x1000000010L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 673;
                  break;
               case 675:
                  if ((0x1000000010L & l) != 0L && kind > 62)
                     kind = 62;
                  break;
               case 676:
               case 679:
                  if ((0x200000002L & l) != 0L)
                     { jjCheckNAdd(675); }
                  break;
               case 677:
                  if ((0x4000000040000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 676;
                  break;
               case 678:
                  if ((0x8000000080L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 677;
                  break;
               case 680:
                  if ((0x4000000040000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 679;
                  break;
               case 681:
                  if ((0x400000004000L & l) != 0L && kind > 62)
                     kind = 62;
                  break;
               case 682:
                  if ((0x4000000040000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 681;
                  break;
               case 683:
                  if ((0x20000000200000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 682;
                  break;
               case 684:
                  if ((0x10000000100000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 683;
                  break;
               case 686:
                  if ((0x400000004L & l) != 0L && kind > 63)
                     kind = 63;
                  break;
               case 687:
                  if ((0x1000000010L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 686;
                  break;
               case 689:
                  if ((0x10000000100000L & l) != 0L && kind > 64)
                     kind = 64;
                  break;
               case 690:
                  if ((0x8000000080000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 689;
                  break;
               case 692:
               case 694:
                  if ((0x8000000080000L & l) != 0L && kind > 65)
                     kind = 65;
                  break;
               case 693:
                  if ((0x200000002000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 692;
                  break;
               case 696:
                  if ((0x400000004000000L & l) != 0L && kind > 66)
                     kind = 66;
                  break;
               case 697:
               case 698:
                  if ((0x10000000100L & l) != 0L)
                     { jjCheckNAdd(696); }
                  break;
               case 699:
                  if ((0x80000000800L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 698;
                  break;
               case 701:
               case 708:
                  if ((0x100000001000000L & l) != 0L && kind > 67)
                     kind = 67;
                  break;
               case 702:
                  if ((0x1000000010L & l) != 0L)
                     { jjAddStates(1993, 1995); }
                  break;
               case 703:
                  if ((0x20000000200L & l) != 0L && kind > 67)
                     kind = 67;
                  break;
               case 704:
                  if ((0x1000000010000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 703;
                  break;
               case 705:
                  if ((0x200000002000L & l) != 0L && kind > 67)
                     kind = 67;
                  break;
               case 706:
                  if ((0x800000008L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 705;
                  break;
               case 707:
                  if ((0x1000000010000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 706;
                  break;
               case 709:
                  if ((0x1000000010000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 708;
                  break;
               case 710:
                  if ((0x1000000010000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 709;
                  break;
               case 712:
               case 713:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     { jjCheckNAddStates(1634, 1636); }
                  break;
               case 715:
                  if (curChar == 92)
                     jjstateSet[jjnewStateCnt++] = 714;
                  break;
               case 716:
                  if (curChar == 92)
                     { jjCheckNAddTwoStates(717, 718); }
                  break;
               case 717:
                  if ((0xffffff81ffffff81L & l) != 0L)
                     { jjCheckNAddStates(1634, 1636); }
                  break;
               case 718:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(1637, 1642); }
                  break;
               case 722:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(1643, 1651); }
                  break;
               case 723:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(1652, 1656); }
                  break;
               case 724:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(1657, 1662); }
                  break;
               case 725:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(1663, 1669); }
                  break;
               case 726:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(1670, 1677); }
                  break;
               case 727:
                  if (curChar == 92)
                     { jjCheckNAddTwoStates(717, 728); }
                  break;
               case 728:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(1678, 1683); }
                  break;
               case 730:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(1684, 1692); }
                  break;
               case 731:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(1693, 1697); }
                  break;
               case 732:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(1698, 1703); }
                  break;
               case 733:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(1704, 1710); }
                  break;
               case 734:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(1711, 1718); }
                  break;
               case 736:
               case 737:
                  if ((0x7fffffe87fffffeL & l) == 0L)
                     break;
                  if (kind > 69)
                     kind = 69;
                  { jjCheckNAddTwoStates(737, 738); }
                  break;
               case 738:
                  if (curChar == 92)
                     { jjCheckNAddTwoStates(739, 740); }
                  break;
               case 739:
                  if ((0xffffff81ffffff81L & l) == 0L)
                     break;
                  if (kind > 69)
                     kind = 69;
                  { jjCheckNAddTwoStates(737, 738); }
                  break;
               case 740:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 69)
                     kind = 69;
                  { jjCheckNAddStates(1722, 1726); }
                  break;
               case 744:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 69)
                     kind = 69;
                  { jjCheckNAddStates(1727, 1734); }
                  break;
               case 745:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 69)
                     kind = 69;
                  { jjCheckNAddStates(1735, 1738); }
                  break;
               case 746:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 69)
                     kind = 69;
                  { jjCheckNAddStates(1739, 1743); }
                  break;
               case 747:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 69)
                     kind = 69;
                  { jjCheckNAddStates(1744, 1749); }
                  break;
               case 748:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 69)
                     kind = 69;
                  { jjCheckNAddStates(1750, 1756); }
                  break;
               case 749:
                  if (curChar == 92)
                     { jjCheckNAddTwoStates(739, 750); }
                  break;
               case 750:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 69)
                     kind = 69;
                  { jjCheckNAddStates(1757, 1761); }
                  break;
               case 752:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 69)
                     kind = 69;
                  { jjCheckNAddStates(1762, 1769); }
                  break;
               case 753:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 69)
                     kind = 69;
                  { jjCheckNAddStates(1770, 1773); }
                  break;
               case 754:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 69)
                     kind = 69;
                  { jjCheckNAddStates(1774, 1778); }
                  break;
               case 755:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 69)
                     kind = 69;
                  { jjCheckNAddStates(1779, 1784); }
                  break;
               case 756:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 69)
                     kind = 69;
                  { jjCheckNAddStates(1785, 1791); }
                  break;
               case 761:
               case 762:
                  if ((0x7fffffe87fffffeL & l) == 0L)
                     break;
                  if (kind > 104)
                     kind = 104;
                  { jjCheckNAddTwoStates(762, 763); }
                  break;
               case 763:
                  if (curChar == 92)
                     { jjCheckNAddTwoStates(764, 765); }
                  break;
               case 764:
                  if ((0xffffff81ffffff81L & l) == 0L)
                     break;
                  if (kind > 104)
                     kind = 104;
                  { jjCheckNAddTwoStates(762, 763); }
                  break;
               case 765:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 104)
                     kind = 104;
                  { jjCheckNAddStates(1792, 1796); }
                  break;
               case 769:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 104)
                     kind = 104;
                  { jjCheckNAddStates(1797, 1804); }
                  break;
               case 770:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 104)
                     kind = 104;
                  { jjCheckNAddStates(1805, 1808); }
                  break;
               case 771:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 104)
                     kind = 104;
                  { jjCheckNAddStates(1809, 1813); }
                  break;
               case 772:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 104)
                     kind = 104;
                  { jjCheckNAddStates(1814, 1819); }
                  break;
               case 773:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 104)
                     kind = 104;
                  { jjCheckNAddStates(1820, 1826); }
                  break;
               case 774:
                  if (curChar == 92)
                     { jjCheckNAddTwoStates(764, 775); }
                  break;
               case 775:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 104)
                     kind = 104;
                  { jjCheckNAddStates(1827, 1831); }
                  break;
               case 777:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 104)
                     kind = 104;
                  { jjCheckNAddStates(1832, 1839); }
                  break;
               case 778:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 104)
                     kind = 104;
                  { jjCheckNAddStates(1840, 1843); }
                  break;
               case 779:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 104)
                     kind = 104;
                  { jjCheckNAddStates(1844, 1848); }
                  break;
               case 780:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 104)
                     kind = 104;
                  { jjCheckNAddStates(1849, 1854); }
                  break;
               case 781:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 104)
                     kind = 104;
                  { jjCheckNAddStates(1855, 1861); }
                  break;
               case 785:
                  { jjAddStates(1996, 1997); }
                  break;
               case 787:
               case 788:
                  { jjCheckNAddTwoStates(788, 789); }
                  break;
               case 792:
                  if ((0x10000000100000L & l) != 0L && kind > 72)
                     kind = 72;
                  break;
               case 793:
                  if ((0x400000004000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 792;
                  break;
               case 794:
                  if ((0x200000002L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 793;
                  break;
               case 795:
                  if ((0x10000000100000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 794;
                  break;
               case 796:
                  if ((0x4000000040000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 795;
                  break;
               case 797:
                  if ((0x800000008000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 796;
                  break;
               case 798:
                  if ((0x1000000010000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 797;
                  break;
               case 799:
                  if ((0x200000002000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 798;
                  break;
               case 800:
                  if ((0x20000000200L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 799;
                  break;
               case 803:
                  { jjAddStates(1998, 1999); }
                  break;
               case 805:
               case 806:
                  { jjCheckNAddTwoStates(806, 807); }
                  break;
               case 810:
                  if ((0x2000000020L & l) == 0L)
                     break;
                  if (kind > 73)
                     kind = 73;
                  jjstateSet[jjnewStateCnt++] = 811;
                  break;
               case 812:
                  if ((0x20000000200L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 810;
                  break;
               case 813:
                  if (curChar == 92)
                     { jjCheckNAddStates(1905, 1908); }
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else
      {
         int hiByte = (curChar >> 8);
         int i1 = hiByte >> 6;
         long l1 = 1L << (hiByte & 077);
         int i2 = (curChar & 0xff) >> 6;
         long l2 = 1L << (curChar & 077);
         do
         {
            switch(jjstateSet[--i])
            {
               case 7:
                  if (!jjCanMove_0(hiByte, i1, i2, l1, l2))
                     break;
                  if (kind > 38)
                     kind = 38;
                  { jjCheckNAddStates(1900, 1904); }
                  break;
               case 1:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjAddStates(1915, 1916); }
                  break;
               case 3:
               case 4:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjCheckNAddTwoStates(4, 5); }
                  break;
               case 14:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjAddStates(197, 198); }
                  break;
               case 51:
               case 52:
               case 54:
                  if (!jjCanMove_0(hiByte, i1, i2, l1, l2))
                     break;
                  if (kind > 93)
                     kind = 93;
                  { jjCheckNAddTwoStates(52, 53); }
                  break;
               case 81:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjAddStates(1921, 1922); }
                  break;
               case 83:
               case 84:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjCheckNAddTwoStates(84, 85); }
                  break;
               case 89:
               case 90:
               case 188:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjCheckNAddStates(282, 287); }
                  break;
               case 93:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjAddStates(1923, 1924); }
                  break;
               case 95:
               case 96:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjCheckNAddTwoStates(96, 97); }
                  break;
               case 101:
               case 102:
               case 118:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjCheckNAddStates(300, 302); }
                  break;
               case 105:
               case 106:
               case 137:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjCheckNAddStates(308, 313); }
                  break;
               case 109:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjAddStates(1925, 1926); }
                  break;
               case 111:
               case 112:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjCheckNAddTwoStates(112, 113); }
                  break;
               case 156:
               case 162:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjCheckNAddStates(523, 525); }
                  break;
               case 172:
               case 178:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjCheckNAddStates(572, 574); }
                  break;
               case 216:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjAddStates(1943, 1944); }
                  break;
               case 218:
               case 219:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjCheckNAddTwoStates(219, 220); }
                  break;
               case 224:
               case 225:
               case 237:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjCheckNAddStates(746, 749); }
                  break;
               case 228:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjAddStates(1945, 1946); }
                  break;
               case 230:
               case 231:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjCheckNAddTwoStates(231, 232); }
                  break;
               case 279:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjAddStates(1947, 1948); }
                  break;
               case 281:
               case 282:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjCheckNAddTwoStates(282, 283); }
                  break;
               case 288:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjAddStates(1949, 1950); }
                  break;
               case 290:
               case 291:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjCheckNAddTwoStates(291, 292); }
                  break;
               case 299:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjAddStates(1951, 1952); }
                  break;
               case 301:
               case 302:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjCheckNAddTwoStates(302, 303); }
                  break;
               case 308:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjAddStates(1953, 1954); }
                  break;
               case 310:
               case 311:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjCheckNAddTwoStates(311, 312); }
                  break;
               case 317:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjAddStates(1955, 1956); }
                  break;
               case 319:
               case 320:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjCheckNAddTwoStates(320, 321); }
                  break;
               case 326:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjAddStates(1957, 1958); }
                  break;
               case 328:
               case 329:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjCheckNAddTwoStates(329, 330); }
                  break;
               case 335:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjAddStates(1959, 1960); }
                  break;
               case 337:
               case 338:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjCheckNAddTwoStates(338, 339); }
                  break;
               case 346:
               case 352:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjCheckNAddStates(907, 909); }
                  break;
               case 361:
               case 366:
                  if (!jjCanMove_0(hiByte, i1, i2, l1, l2))
                     break;
                  if (kind > 37)
                     kind = 37;
                  { jjCheckNAddTwoStates(361, 362); }
                  break;
               case 376:
               case 382:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjCheckNAddStates(986, 988); }
                  break;
               case 391:
               case 396:
                  if (!jjCanMove_0(hiByte, i1, i2, l1, l2))
                     break;
                  if (kind > 37)
                     kind = 37;
                  { jjCheckNAddTwoStates(391, 392); }
                  break;
               case 406:
               case 407:
               case 409:
                  if (!jjCanMove_0(hiByte, i1, i2, l1, l2))
                     break;
                  if (kind > 38)
                     kind = 38;
                  { jjCheckNAddTwoStates(407, 408); }
                  break;
               case 420:
               case 421:
               case 423:
                  if (!jjCanMove_0(hiByte, i1, i2, l1, l2))
                     break;
                  if (kind > 42)
                     kind = 42;
                  { jjCheckNAddTwoStates(421, 422); }
                  break;
               case 441:
               case 442:
               case 445:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjCheckNAddStates(1172, 1174); }
                  break;
               case 474:
               case 475:
               case 477:
                  if (!jjCanMove_0(hiByte, i1, i2, l1, l2))
                     break;
                  if (kind > 39)
                     kind = 39;
                  { jjCheckNAddTwoStates(475, 476); }
                  break;
               case 495:
               case 497:
                  if (!jjCanMove_0(hiByte, i1, i2, l1, l2))
                     break;
                  if (kind > 40)
                     kind = 40;
                  { jjCheckNAddTwoStates(495, 496); }
                  break;
               case 510:
               case 526:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjCheckNAddStates(1403, 1405); }
                  break;
               case 514:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjAddStates(1979, 1980); }
                  break;
               case 516:
               case 517:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjCheckNAddTwoStates(517, 518); }
                  break;
               case 536:
               case 542:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjCheckNAddStates(1456, 1458); }
                  break;
               case 551:
               case 553:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjCheckNAddStates(1500, 1503); }
                  break;
               case 565:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjAddStates(1991, 1992); }
                  break;
               case 567:
               case 568:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjCheckNAddTwoStates(568, 569); }
                  break;
               case 712:
               case 713:
               case 717:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjCheckNAddStates(1634, 1636); }
                  break;
               case 736:
               case 737:
               case 739:
                  if (!jjCanMove_0(hiByte, i1, i2, l1, l2))
                     break;
                  if (kind > 69)
                     kind = 69;
                  { jjCheckNAddTwoStates(737, 738); }
                  break;
               case 761:
               case 762:
               case 764:
                  if (!jjCanMove_0(hiByte, i1, i2, l1, l2))
                     break;
                  if (kind > 104)
                     kind = 104;
                  { jjCheckNAddTwoStates(762, 763); }
                  break;
               case 785:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjAddStates(1996, 1997); }
                  break;
               case 787:
               case 788:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjCheckNAddTwoStates(788, 789); }
                  break;
               case 803:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjAddStates(1998, 1999); }
                  break;
               case 805:
               case 806:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjCheckNAddTwoStates(806, 807); }
                  break;
               default : if (i1 == 0 || l1 == 0 || i2 == 0 ||  l2 == 0) break; else break;
            }
         } while(i != startsAt);
      }
      if (kind != 0x7fffffff)
      {
         jjmatchedKind = kind;
         jjmatchedPos = curPos;
         kind = 0x7fffffff;
      }
      ++curPos;
      if ((i = jjnewStateCnt) == (startsAt = 893 - (jjnewStateCnt = startsAt)))
         break;
      try { curChar = input_stream.readChar(); }
      catch(java.io.IOException e) { break; }
   }
   if (jjmatchedPos > strPos)
      return curPos;

   int toRet = Math.max(curPos, seenUpto);

   if (curPos < toRet)
      for (i = toRet - Math.min(curPos, seenUpto); i-- > 0; )
         try { curChar = input_stream.readChar(); }
         catch(java.io.IOException e) { throw new Error("Internal Error : Please send a bug report."); }

   if (jjmatchedPos < strPos)
   {
      jjmatchedKind = strKind;
      jjmatchedPos = strPos;
   }
   else if (jjmatchedPos == strPos && jjmatchedKind > strKind)
      jjmatchedKind = strKind;

   return toRet;
}

/** Token literal values. */
public static final String[] jjstrLiteralImages = {
"", null, null, null, null, null, null, null, null, null, null, null, null, 
null, null, null, null, null, null, null, null, null, "\74\41\55\55", "\55\55\76", 
null, "\174\75", null, null, "\55", null, null, null, null, null, null, null, null, 
null, null, null, null, null, null, "\175", "\136\75", "\44\75", "\52\75", "\75", 
"\73", "\57", "\133", "\135", "\52", "\56", "\51", "\50", "\72", null, null, null, 
null, null, null, null, null, null, null, null, null, null, null, null, null, null, 
"\72\72", null, null, null, null, null, null, null, null, null, null, null, null, null, 
null, null, null, null, null, null, null, null, null, null, null, null, null, null, 
null, null, null, null, null, null, null, null, null, null, null, null, "\174", 
"\45", };
protected Token jjFillToken()
{
   final Token t;
   final String curTokenImage;
   final int beginLine;
   final int endLine;
   final int beginColumn;
   final int endColumn;
   String im = jjstrLiteralImages[jjmatchedKind];
   curTokenImage = (im == null) ? input_stream.GetImage() : im;
   beginLine = input_stream.getBeginLine();
   beginColumn = input_stream.getBeginColumn();
   endLine = input_stream.getEndLine();
   endColumn = input_stream.getEndColumn();
   t = Token.newToken(jjmatchedKind, curTokenImage);

   t.beginLine = beginLine;
   t.endLine = endLine;
   t.beginColumn = beginColumn;
   t.endColumn = endColumn;

   return t;
}
static final int[] jjnextStates = {
   815, 816, 817, 623, 818, 819, 820, 626, 821, 822, 823, 629, 824, 825, 826, 632, 
   827, 828, 829, 635, 830, 831, 832, 638, 833, 834, 835, 643, 836, 837, 838, 648, 
   839, 840, 841, 651, 842, 843, 844, 653, 845, 846, 847, 655, 848, 849, 850, 658, 
   851, 852, 853, 661, 854, 855, 856, 664, 857, 858, 859, 667, 860, 861, 862, 670, 
   863, 864, 865, 674, 678, 680, 684, 866, 867, 868, 687, 869, 870, 871, 690, 872, 
   873, 874, 693, 694, 875, 876, 877, 697, 699, 878, 879, 880, 701, 881, 882, 883, 
   712, 884, 885, 886, 736, 887, 888, 889, 758, 890, 891, 892, 749, 727, 702, 285, 
   286, 294, 295, 296, 305, 306, 8, 314, 315, 9, 323, 324, 10, 332, 333, 11, 
   341, 342, 343, 621, 624, 627, 630, 633, 636, 639, 644, 649, 652, 654, 656, 659, 
   662, 665, 668, 671, 685, 688, 691, 695, 700, 711, 735, 757, 759, 760, 761, 774, 
   473, 474, 495, 496, 487, 406, 419, 441, 455, 463, 376, 377, 391, 392, 378, 346, 
   347, 361, 362, 348, 783, 800, 801, 812, 265, 276, 212, 79, 88, 89, 198, 2, 
   3, 6, 3, 5, 6, 14, 15, 51, 64, 52, 57, 58, 53, 59, 52, 60, 
   57, 58, 53, 61, 62, 63, 52, 57, 58, 53, 52, 60, 57, 58, 53, 52, 
   60, 57, 58, 53, 61, 52, 60, 57, 58, 53, 61, 62, 66, 58, 52, 53, 
   67, 68, 66, 58, 52, 53, 69, 70, 71, 66, 58, 52, 53, 68, 66, 58, 
   52, 53, 68, 66, 58, 52, 53, 69, 68, 66, 58, 52, 53, 69, 70, 87, 
   88, 89, 198, 79, 82, 83, 86, 83, 85, 86, 90, 91, 100, 101, 116, 187, 
   99, 100, 101, 116, 117, 91, 94, 95, 98, 95, 97, 98, 102, 103, 119, 104, 
   105, 155, 171, 147, 100, 101, 106, 107, 116, 136, 100, 101, 115, 116, 117, 107, 
   110, 111, 114, 111, 113, 114, 102, 122, 123, 103, 119, 124, 102, 125, 122, 123, 
   103, 119, 126, 127, 128, 102, 122, 123, 103, 119, 102, 125, 122, 123, 103, 119, 
   102, 125, 122, 123, 103, 119, 126, 102, 125, 122, 123, 103, 119, 126, 127, 130, 
   123, 102, 103, 119, 131, 132, 130, 123, 102, 103, 119, 133, 134, 135, 130, 123, 
   102, 103, 119, 132, 130, 123, 102, 103, 119, 132, 130, 123, 102, 103, 119, 133, 
   132, 130, 123, 102, 103, 119, 133, 134, 100, 101, 106, 140, 116, 136, 141, 142, 
   100, 101, 106, 107, 115, 116, 117, 107, 136, 100, 101, 106, 143, 140, 116, 136, 
   141, 144, 145, 146, 100, 101, 106, 140, 116, 136, 141, 100, 101, 106, 143, 140, 
   116, 136, 141, 100, 101, 106, 143, 140, 116, 136, 141, 144, 100, 101, 106, 143, 
   140, 116, 136, 141, 144, 145, 100, 101, 149, 106, 116, 136, 141, 150, 100, 101, 
   151, 149, 106, 116, 136, 141, 152, 153, 154, 100, 101, 149, 106, 116, 136, 141, 
   100, 101, 151, 149, 106, 116, 136, 141, 100, 101, 151, 149, 106, 116, 136, 141, 
   152, 100, 101, 151, 149, 106, 116, 136, 141, 152, 153, 156, 157, 158, 100, 101, 
   107, 116, 117, 156, 164, 165, 157, 158, 166, 156, 167, 164, 165, 157, 158, 168, 
   169, 170, 156, 164, 165, 157, 158, 156, 167, 164, 165, 157, 158, 156, 167, 164, 
   165, 157, 158, 168, 156, 167, 164, 165, 157, 158, 168, 169, 172, 173, 174, 172, 
   180, 181, 173, 174, 182, 172, 183, 180, 181, 173, 174, 184, 185, 186, 172, 180, 
   181, 173, 174, 172, 183, 180, 181, 173, 174, 172, 183, 180, 181, 173, 174, 184, 
   172, 183, 180, 181, 173, 174, 184, 185, 90, 191, 100, 101, 116, 187, 192, 193, 
   90, 91, 99, 100, 101, 116, 117, 91, 187, 90, 194, 191, 100, 101, 116, 187, 
   192, 195, 196, 197, 90, 191, 100, 101, 116, 187, 192, 90, 194, 191, 100, 101, 
   116, 187, 192, 90, 194, 191, 100, 101, 116, 187, 192, 195, 90, 194, 191, 100, 
   101, 116, 187, 192, 195, 196, 200, 90, 100, 101, 116, 187, 192, 201, 202, 200, 
   90, 100, 101, 116, 187, 192, 203, 204, 205, 200, 90, 100, 101, 116, 187, 192, 
   202, 200, 90, 100, 101, 116, 187, 192, 202, 200, 90, 100, 101, 116, 187, 192, 
   203, 202, 200, 90, 100, 101, 116, 187, 192, 203, 204, 214, 223, 224, 247, 222, 
   223, 224, 247, 214, 217, 218, 221, 218, 220, 221, 225, 226, 235, 236, 234, 235, 
   226, 229, 230, 233, 230, 232, 233, 225, 240, 235, 236, 241, 242, 225, 226, 234, 
   235, 226, 236, 225, 243, 240, 235, 236, 241, 244, 245, 246, 225, 240, 235, 236, 
   241, 225, 243, 240, 235, 236, 241, 225, 243, 240, 235, 236, 241, 244, 225, 243, 
   240, 235, 236, 241, 244, 245, 249, 225, 235, 236, 241, 250, 251, 249, 225, 235, 
   236, 241, 252, 253, 254, 249, 225, 235, 236, 241, 251, 249, 225, 235, 236, 241, 
   251, 249, 225, 235, 236, 241, 252, 251, 249, 225, 235, 236, 241, 252, 253, 280, 
   281, 284, 281, 283, 284, 289, 290, 293, 290, 292, 293, 294, 295, 296, 300, 301, 
   304, 301, 303, 304, 305, 306, 8, 309, 310, 313, 310, 312, 313, 314, 315, 9, 
   318, 319, 322, 319, 321, 322, 323, 324, 10, 327, 328, 331, 328, 330, 331, 332, 
   333, 11, 336, 337, 340, 337, 339, 340, 341, 342, 343, 346, 347, 348, 346, 354, 
   355, 347, 348, 356, 346, 357, 354, 355, 347, 348, 358, 359, 360, 346, 354, 355, 
   347, 348, 346, 357, 354, 355, 347, 348, 346, 357, 354, 355, 347, 348, 358, 346, 
   357, 354, 355, 347, 348, 358, 359, 361, 368, 369, 362, 370, 361, 371, 368, 369, 
   362, 372, 373, 374, 361, 368, 369, 362, 361, 371, 368, 369, 362, 361, 371, 368, 
   369, 362, 372, 361, 371, 368, 369, 362, 372, 373, 376, 377, 378, 376, 384, 385, 
   377, 378, 386, 376, 387, 384, 385, 377, 378, 388, 389, 390, 376, 384, 385, 377, 
   378, 376, 387, 384, 385, 377, 378, 376, 387, 384, 385, 377, 378, 388, 376, 387, 
   384, 385, 377, 378, 388, 389, 391, 398, 399, 392, 400, 391, 401, 398, 399, 392, 
   402, 403, 404, 391, 398, 399, 392, 391, 401, 398, 399, 392, 391, 401, 398, 399, 
   392, 402, 391, 401, 398, 399, 392, 402, 403, 407, 412, 413, 408, 414, 407, 415, 
   412, 413, 408, 416, 417, 418, 407, 412, 413, 408, 407, 415, 412, 413, 408, 407, 
   415, 412, 413, 408, 416, 407, 415, 412, 413, 408, 416, 417, 420, 433, 421, 426, 
   427, 422, 428, 421, 429, 426, 427, 422, 430, 431, 432, 421, 426, 427, 422, 421, 
   429, 426, 427, 422, 421, 429, 426, 427, 422, 430, 421, 429, 426, 427, 422, 430, 
   431, 435, 427, 421, 422, 436, 437, 435, 427, 421, 422, 438, 439, 440, 435, 427, 
   421, 422, 437, 435, 427, 421, 422, 437, 435, 427, 421, 422, 438, 437, 435, 427, 
   421, 422, 438, 439, 442, 443, 444, 442, 448, 449, 443, 444, 450, 442, 451, 448, 
   449, 443, 444, 452, 453, 454, 442, 448, 449, 443, 444, 442, 451, 448, 449, 443, 
   444, 442, 451, 448, 449, 443, 444, 452, 442, 451, 448, 449, 443, 444, 452, 453, 
   457, 449, 442, 443, 444, 458, 459, 457, 449, 442, 443, 444, 460, 461, 462, 457, 
   449, 442, 443, 444, 459, 457, 449, 442, 443, 444, 459, 457, 449, 442, 443, 444, 
   460, 459, 457, 449, 442, 443, 444, 460, 461, 465, 413, 407, 408, 466, 467, 465, 
   413, 407, 408, 468, 469, 470, 465, 413, 407, 408, 467, 465, 413, 407, 408, 467, 
   465, 413, 407, 408, 468, 467, 465, 413, 407, 408, 468, 469, 475, 480, 481, 476, 
   482, 475, 483, 480, 481, 476, 484, 485, 486, 475, 480, 481, 476, 475, 483, 480, 
   481, 476, 475, 483, 480, 481, 476, 484, 475, 483, 480, 481, 476, 484, 485, 489, 
   481, 475, 476, 490, 491, 489, 481, 475, 476, 492, 493, 494, 489, 481, 475, 476, 
   491, 489, 481, 475, 476, 491, 489, 481, 475, 476, 492, 491, 489, 481, 475, 476, 
   492, 493, 495, 500, 501, 496, 502, 495, 503, 500, 501, 496, 504, 505, 506, 495, 
   500, 501, 496, 495, 503, 500, 501, 496, 495, 503, 500, 501, 496, 504, 495, 503, 
   500, 501, 496, 504, 505, 509, 535, 551, 521, 552, 563, 510, 511, 522, 520, 521, 
   512, 515, 516, 519, 516, 518, 519, 510, 528, 529, 511, 522, 530, 510, 531, 528, 
   529, 511, 522, 532, 533, 534, 510, 528, 529, 511, 522, 510, 531, 528, 529, 511, 
   522, 510, 531, 528, 529, 511, 522, 532, 510, 531, 528, 529, 511, 522, 532, 533, 
   536, 537, 538, 536, 544, 545, 537, 538, 546, 536, 547, 544, 545, 537, 538, 548, 
   549, 550, 536, 544, 545, 537, 538, 536, 547, 544, 545, 537, 538, 536, 547, 544, 
   545, 537, 538, 548, 536, 547, 544, 545, 537, 538, 548, 549, 551, 512, 521, 552, 
   551, 556, 521, 552, 557, 558, 551, 512, 520, 521, 512, 552, 551, 559, 556, 521, 
   552, 557, 560, 561, 562, 551, 556, 521, 552, 557, 551, 559, 556, 521, 552, 557, 
   551, 559, 556, 521, 552, 557, 560, 551, 559, 556, 521, 552, 557, 560, 561, 571, 
   509, 535, 551, 520, 521, 512, 552, 563, 566, 567, 570, 567, 569, 570, 571, 509, 
   535, 551, 521, 552, 563, 575, 581, 577, 578, 579, 580, 577, 578, 579, 582, 587, 
   591, 595, 599, 603, 577, 601, 602, 577, 604, 605, 606, 577, 604, 605, 586, 612, 
   613, 614, 586, 612, 613, 616, 609, 617, 618, 619, 616, 609, 617, 616, 609, 617, 
   618, 671, 674, 678, 680, 684, 691, 693, 694, 695, 697, 699, 700, 701, 702, 711, 
   712, 727, 713, 715, 716, 713, 720, 721, 715, 716, 722, 713, 723, 720, 721, 715, 
   716, 724, 725, 726, 713, 720, 721, 715, 716, 713, 723, 720, 721, 715, 716, 713, 
   723, 720, 721, 715, 716, 724, 713, 723, 720, 721, 715, 716, 724, 725, 729, 721, 
   713, 715, 716, 730, 731, 729, 721, 713, 715, 716, 732, 733, 734, 729, 721, 713, 
   715, 716, 731, 729, 721, 713, 715, 716, 731, 729, 721, 713, 715, 716, 732, 731, 
   729, 721, 713, 715, 716, 732, 733, 735, 736, 749, 737, 742, 743, 738, 744, 737, 
   745, 742, 743, 738, 746, 747, 748, 737, 742, 743, 738, 737, 745, 742, 743, 738, 
   737, 745, 742, 743, 738, 746, 737, 745, 742, 743, 738, 746, 747, 751, 743, 737, 
   738, 752, 753, 751, 743, 737, 738, 754, 755, 756, 751, 743, 737, 738, 753, 751, 
   743, 737, 738, 753, 751, 743, 737, 738, 754, 753, 751, 743, 737, 738, 754, 755, 
   762, 767, 768, 763, 769, 762, 770, 767, 768, 763, 771, 772, 773, 762, 767, 768, 
   763, 762, 770, 767, 768, 763, 762, 770, 767, 768, 763, 771, 762, 770, 767, 768, 
   763, 771, 772, 776, 768, 762, 763, 777, 778, 776, 768, 762, 763, 779, 780, 781, 
   776, 768, 762, 763, 778, 776, 768, 762, 763, 778, 776, 768, 762, 763, 779, 778, 
   776, 768, 762, 763, 779, 780, 791, 800, 783, 786, 787, 790, 787, 789, 790, 809, 
   812, 801, 804, 805, 808, 805, 807, 808, 863, 674, 678, 680, 684, 872, 693, 694, 
   875, 697, 699, 878, 701, 702, 881, 712, 727, 884, 736, 749, 407, 442, 443, 444, 
   408, 409, 464, 445, 456, 50, 51, 64, 573, 574, 607, 1, 2, 79, 88, 89, 
   198, 81, 82, 93, 94, 109, 110, 118, 129, 137, 138, 159, 161, 162, 163, 175, 
   177, 178, 179, 188, 189, 118, 129, 216, 217, 228, 229, 279, 280, 288, 289, 299, 
   300, 308, 309, 317, 318, 326, 327, 335, 336, 349, 351, 352, 353, 363, 365, 366, 
   367, 379, 381, 382, 383, 393, 395, 396, 397, 497, 498, 514, 515, 523, 525, 526, 
   527, 539, 541, 542, 543, 553, 554, 565, 566, 704, 707, 710, 785, 786, 803, 804, 
};
private static final boolean jjCanMove_0(int hiByte, int i1, int i2, long l1, long l2)
{
   switch(hiByte)
   {
      case 0:
         return ((jjbitVec2[i2] & l2) != 0L);
      default :
         if ((jjbitVec0[i1] & l1) != 0L)
            return true;
         return false;
   }
}

int curLexState = 0;
int defaultLexState = 0;
int jjnewStateCnt;
int jjround;
int jjmatchedPos;
int jjmatchedKind;

/** Get the next Token. */
public Token getNextToken() 
{
  Token specialToken = null;
  Token matchedToken;
  int curPos = 0;

  EOFLoop :
  for (;;)
  {
   try
   {
      curChar = input_stream.BeginToken();
   }
   catch(Exception e)
   {
      jjmatchedKind = 0;
      jjmatchedPos = -1;
      matchedToken = jjFillToken();
      matchedToken.specialToken = specialToken;
      return matchedToken;
   }

   jjmatchedKind = 0x7fffffff;
   jjmatchedPos = 0;
   curPos = jjMoveStringLiteralDfa0_0();
   if (jjmatchedKind != 0x7fffffff)
   {
      if (jjmatchedPos + 1 < curPos)
         input_stream.backup(curPos - jjmatchedPos - 1);
      if ((jjtoToken[jjmatchedKind >> 6] & (1L << (jjmatchedKind & 077))) != 0L)
      {
         matchedToken = jjFillToken();
         matchedToken.specialToken = specialToken;
         return matchedToken;
      }
      else
      {
         if ((jjtoSpecial[jjmatchedKind >> 6] & (1L << (jjmatchedKind & 077))) != 0L)
         {
            matchedToken = jjFillToken();
            if (specialToken == null)
               specialToken = matchedToken;
            else
            {
               matchedToken.specialToken = specialToken;
               specialToken = (specialToken.next = matchedToken);
            }
         }
         continue EOFLoop;
      }
   }
   int error_line = input_stream.getEndLine();
   int error_column = input_stream.getEndColumn();
   String error_after = null;
   boolean EOFSeen = false;
   try { input_stream.readChar(); input_stream.backup(1); }
   catch (java.io.IOException e1) {
      EOFSeen = true;
      error_after = curPos <= 1 ? "" : input_stream.GetImage();
      if (curChar == '\n' || curChar == '\r') {
         error_line++;
         error_column = 0;
      }
      else
         error_column++;
   }
   if (!EOFSeen) {
      input_stream.backup(1);
      error_after = curPos <= 1 ? "" : input_stream.GetImage();
   }
   throw new TokenMgrError(EOFSeen, curLexState, error_line, error_column, error_after, curChar, TokenMgrError.LEXICAL_ERROR);
  }
}

void SkipLexicalActions(Token matchedToken)
{
   switch(jjmatchedKind)
   {
      default :
         break;
   }
}
void MoreLexicalActions()
{
   jjimageLen += (lengthOfMatch = jjmatchedPos + 1);
   switch(jjmatchedKind)
   {
      default :
         break;
   }
}
void TokenLexicalActions(Token matchedToken)
{
   switch(jjmatchedKind)
   {
      default :
         break;
   }
}
private void jjCheckNAdd(int state)
{
   if (jjrounds[state] != jjround)
   {
      jjstateSet[jjnewStateCnt++] = state;
      jjrounds[state] = jjround;
   }
}
private void jjAddStates(int start, int end)
{
   do {
      jjstateSet[jjnewStateCnt++] = jjnextStates[start];
   } while (start++ != end);
}
private void jjCheckNAddTwoStates(int state1, int state2)
{
   jjCheckNAdd(state1);
   jjCheckNAdd(state2);
}

private void jjCheckNAddStates(int start, int end)
{
   do {
      jjCheckNAdd(jjnextStates[start]);
   } while (start++ != end);
}

    /** Constructor. */
    public CssParserTokenManager(SimpleCharStream stream){

      if (SimpleCharStream.staticFlag)
            throw new Error("ERROR: Cannot use a static CharStream class with a non-static lexical analyzer.");

    input_stream = stream;
  }

  /** Constructor. */
  public CssParserTokenManager (SimpleCharStream stream, int lexState){
    ReInit(stream);
    SwitchTo(lexState);
  }

  /** Reinitialise parser. */
  
  public void ReInit(SimpleCharStream stream)
  {


    jjmatchedPos =
    jjnewStateCnt =
    0;
    curLexState = defaultLexState;
    input_stream = stream;
    ReInitRounds();
  }

  private void ReInitRounds()
  {
    int i;
    jjround = 0x80000001;
    for (i = 893; i-- > 0;)
      jjrounds[i] = 0x80000000;
  }

  /** Reinitialise parser. */
  public void ReInit(SimpleCharStream stream, int lexState)
  
  {
    ReInit(stream);
    SwitchTo(lexState);
  }

  /** Switch to specified lex state. */
  public void SwitchTo(int lexState)
  {
    if (lexState >= 1 || lexState < 0)
      throw new TokenMgrError("Error: Ignoring invalid lexical state : " + lexState + ". State unchanged.", TokenMgrError.INVALID_LEXICAL_STATE);
    else
      curLexState = lexState;
  }


/** Lexer state names. */
public static final String[] lexStateNames = {
   "DEFAULT",
};

/** Lex State array. */
public static final int[] jjnewLexState = {
   -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
   -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
   -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
   -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
   -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
};
static final long[] jjtoToken = {
   0xffffffffffe00001L, 0xfff803fffffffL, 
};
static final long[] jjtoSkip = {
   0x2L, 0x0L, 
};
static final long[] jjtoSpecial = {
   0x2L, 0x0L, 
};
static final long[] jjtoMore = {
   0x0L, 0x0L, 
};
    protected SimpleCharStream  input_stream;

    private final int[] jjrounds = new int[893];
    private final int[] jjstateSet = new int[2 * 893];
    private final StringBuilder jjimage = new StringBuilder();
    private StringBuilder image = jjimage;
    private int jjimageLen;
    private int lengthOfMatch;
    protected int curChar;
}
